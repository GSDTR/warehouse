{"version":3,"sources":["components/Excel.js","components/Form_new_part.js","components/Parcel.js","components/Button.js","components/Device.js","App.js","serviceWorker.js","index.js"],"names":["invariant","require","body","document","Excel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_preSearchData","initialData","state","data","sortby","descending","edit","search","hideCompleted","_searchFields","Array","headers","length","join","split","_resultedRow","assertThisInitialized","_search","bind","search_loop","_showEditor","_renderSearch","_sort","_save","hideCompletedFlag","setState","newData","dataJson","i","childArray","j","console","log","tmpData","sort_data","_sortingColumn","column","_this2","invert","arguments","undefined","sort","a","b","aa","bb","col_name","columnDataTypes","parseInt","reSingleDigit","replace","e","target","cellIndex","slice","row","dataset","cell","url","request","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","status","send","JSON","stringify","xhr","responseType","onload","resp","response","alert","preventDefault","input","firstChild","rowIdx","colIdx","colName","val","value","id","part_number","fetchData","encodeURIComponent","_this3","idx","needle","filter","toString","toLowerCase","indexOf","format","contents","URL","window","webkitURL","blob","Blob","type","createElement","createObjectURL","href","download","appendChild","click","setTimeout","removeChild","revokeObjectURL","exportBlob","reduce","result","rowresult","react_default","className","_renderTable","_this4","onChange","map","_ignore","key","class","columnClasses","data-idx","_this5","rowIdxToDisplay","prevProps","prevState","_focusElem","focus","_this6","onClick","title","onDoubleClick","rowidx","_this7","content","onSubmit","defaultValue","ref","c","data-row","match","exec","_renderResultRow","Component","Form_new_part","createComponent","fillCell","fastSearch","getPartNumber","getElementById","reset","event","res_request","cnt","name","htmlFor","placeholder","Parcel","requestParcelsList","setInterval","dataa","parse","updateData","_this8","Button","options","label","Device","importJSON_","FormData","append","handleChange","selectedOption","selectedDevice","bomSoldered","deviceList","sortColumn","importJSON","_renderButton","_markSoldered","bomSolderedFlag","push","solderingSequenceCleanup","cellIdx","qty","tmp","checkIfResponceValid","jsonTmp2","RegExp","deviceBom","prompt","device_id","file","files","deviceName","post","then","catch","error","react_select_browser_esm","rowClass","App","httpRequest","hideCompletedTasks","isChecked","excel","exportJSON","exportCSV","renderFlag","myJSON","lib","to","for","src_components_Excel","src_components_Form_new_part","src_components_Parcel","parcel","columnDataTypes2","columnClasses2","headers2","data2","src_components_Device","device","columnDataTypes3","columnClasses3","headers3","data3","Boolean","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f55a02b.chunk.js","sourcesContent":["/* @flow */\n\n//*\nimport React, {Component} from 'react';\nimport \"./Excel.css\"\n\nvar invariant = require('invariant');\n\nvar IDX_OF_ISSUE_IDX = 0;\nvar IDX_ESTIMATION_TIME = 4;\n\nconst body = document.body;\n\ntype Props = {\n    search: boolean,\n    headers: Array<string>,\n    initialData: Array<Array<string>>,\n    columnClasses: Array<string>,\n    columnDataTypes: Array<string>,\n};\n\ntype EditState = {\n    row: number,\n    cell: number,\n};\n\ntype State = {\n    data: Array<Array<string>>,\n    sortby: ?string,\n    descending: boolean,\n    edit: ?EditState, // [row index, cell index],\n    search: boolean,\n    hideCompleted: boolean,\n};\n\nclass Excel extends Component<Props, State>{\n    displayName: 'Excel';\n    _preSearchData: Array<Array<string>>;\n    _searchFields: Array<string>;\n    _sortingColumn: number;\n    _resultedRow: Array<string>;\n    rowIdxToDisplay: number;\n\n    _focusElem: ?HTMLInputElement;\n\n    constructor(props: Props) {\n        super(props);\n            this._preSearchData = this.props.initialData;\n        this.state = {\n            data: this.props.initialData,\n            sortby: null,\n            descending: false,\n            edit: null, // [row index, cell index],\n            search: this.props.search,\n            hideCompleted: false,\n        };\n        this._searchFields = Array(this.props.headers.length).join(\".\").split(\".\");\n        this._resultedRow = Array(this.props.headers.length).join(\".\").split(\".\");\n//        console.log(\"1. resulted row: \", this._resultedRow);\n        (this:any)._search = this._search.bind(this);\n        (this:any).search_loop = this.search_loop.bind(this);\n        (this:any)._showEditor = this._showEditor.bind(this);\n        (this:any)._renderSearch = this._renderSearch.bind(this);\n        (this:any)._sort = this._sort.bind(this);\n        (this:any)._save = this._save.bind(this);\n    }\n\n    hideCompleted(hideCompletedFlag: boolean) {\n        this.setState( {\n            hideCompleted: hideCompletedFlag\n        });\n    }\n\n    updateData(newData: Array<Array<string>>) {\n        var dataJson = newData;\n        // console.log(\"updateData: \", newData);\n        for(let i = 0; i < newData.length; i++){\n            let childArray = newData[i];\n            for(let j = 0; j < childArray.length; j++){\n                if (childArray[j] == null) {\n                    console.log(\"null\", childArray[j]);\n                    childArray[j] = \"\";\n                }\n            }\n        }\n        this.setState({\n                data: dataJson\n            });\n        this._preSearchData = dataJson;\n        var tmpData = this.search_loop(this._preSearchData);\n        this.sort_data(tmpData, this._sortingColumn, false);\n    }\n\n    sort_data(data, column, invert = true) {\n        this._sortingColumn = column;\n        var descending;\n        if (invert) {\n            descending = this.state.sortby === column && !this.state.descending;\n        } else {\n            descending = this.state.sortby === column && this.state.descending;\n        }\n            data.sort(  (a, b) => {\n                var aa = 0;\n                var bb = 0;\n                var col_name =  this.props.headers[column];\n                // console.log(\"column: \", col_name, this.props.columnDataTypes[col_name] );\n                if ((this.props.columnDataTypes[column] == 'numeric') || (this.props.columnDataTypes[column] == 'int')){\n                    // console.log(\"a: \", a[col_name], \"b: \", b[col_name]);\n                    if (a[col_name] != \"\") {\n                        aa = parseInt(a[col_name], 10);\n                    }\n                    if (b[col_name] != \"\") {\n                        bb = parseInt(b[col_name], 10);\n                    }\n                } else if (this.props.columnDataTypes[column] == 'alphaNumeric') {\n\n                    var reSingleDigit = /(?<!\\d)[\\d](?!\\d)/g;\n                    //console.log(\"a: \", a[col_name], \"b: \", b[col_name]);\n                    aa = a[col_name].replace(reSingleDigit, \"0$&\");\n                    bb = b[col_name].replace(reSingleDigit, \"0$&\");\n                    //console.log(a[col_name], \" --> \", aa, \". \", b[col_name], \" --> \", bb);\n\n                } else {\n                    // console.log(\"col: \", col_name, \"a: \", a[ this.props.headers[col_name] ], \"b: \", b[ this.props.headers[col_name] ]);\n                    aa = a[col_name];\n                    bb = b[col_name];\n                }\n                if (descending == false) {\n                    if ( aa < bb ) {    return -1;  }\n                    if ( aa > bb ) {    return 1;   }\n                    return 0;\n                } else {\n                    if ( aa < bb ) {    return 1;   }\n                    if ( aa > bb ) {    return -1;  }\n                    return 0;\n                }\n            });\n        this.setState({\n            data: data,\n            sortby: column,\n            descending: descending,\n        });\n    }\n\n    _sort(e: any) {\n        var column = e.target.cellIndex;\n        var data = this.state.data.slice();\n        this.sort_data(data, column);\n\n    }\n\n    _showEditor(e: any) {\n        this.setState({edit: {\n                row: parseInt(e.target.dataset.row, 10),\n                cell: e.target.cellIndex,\n            }});\n    }\n\n    postData(url, data) {\n        var request = new XMLHttpRequest();\n        request.open('POST', url, true);\n        request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n\n        request.onreadystatechange = function() {//Вызывает функцию при смене состояния.\n           if(request.readyState == XMLHttpRequest.DONE && request.status == 200) {\n                // Запрос завершен. Здесь можно обрабатывать результат.\n            }\n}\n        request.send(JSON.stringify(data));\n\n    }\n\n    fetchData(url) {\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'json';\n        xhr.onload = () => {\n            var resp = xhr.response;\n            console.log(\"responce: \", resp);\n            if(resp[\"success\"] != \"true\") {\n                alert(resp[\"error\"]);\n            }\n        };\n        xhr.open('GET', url, true);\n        xhr.send(null);\n\n    }\n\n\n    _save(e: any) {\n        e.preventDefault();\n        var input = e.target.firstChild;\n        var data = this.state.data.slice();\n        var rowIdx = this.state.edit.row;\n        var colIdx = this.state.edit.cell;\n        var colName = this.props.headers[colIdx];\n        var val = input.value;\n        var id = this.state.data[rowIdx][ this.props.headers[0] ];\n        var part_number = this.state.data[rowIdx][ this.props.headers[4] ];\n        console.log(\"param \", colName, \" val \", val);\n        this.fetchData(\"/api/v1/cell/\"+id+\"?action=update&\" + \"param=\" + colName + \"&val=\"+encodeURIComponent(val)+\"&part_number=\"+part_number);\n\n\n\n        invariant(this.state.edit, \"edit field can't be undefined here!\");\n        data[this.state.edit.row][this.state.edit.cell] = input.value;\n        this.setState({\n            edit: null,\n            data: data,\n        });\n    }\n\n\n    search_loop(tmpData) {\n        var idx = 0;\n        var needle = \"\";\n        // console.log(\"tmpData: \", tmpData);\n        for (var i = 0; i < this._searchFields.length; i++) {\n            idx = i;\n            needle = this._searchFields[i];\n            if (needle == \"\") {\n                continue;\n            }\n            tmpData = tmpData.filter( (row) => {\n                if ((this.props.columnDataTypes[i] == 'numeric') || (this.props.columnDataTypes[i] == 'int')){\n//                    console.log(\"numeric search\");\n                    return row[this.props.headers[idx]] == needle;\n                } else {\n//                    console.log(\"string search\");\n                    return row[this.props.headers[idx]].toString().toLowerCase().indexOf(needle) > -1;\n                }\n//                return row[ this.props.headers[idx] ].toString().toLowerCase().indexOf(needle) > -1;\n            });\n        }\n//        console.log(\"search res dataset length: \", tmpData.length);\n        return tmpData;\n    }\n\n    _search(e: any) {\n        var needle = e.target.value.toLowerCase();\n        var idx = e.target.dataset.idx;\n        this._searchFields[idx] = needle;\n\n//        console.log(\"search: \", this._searchFields);\n        var tmpData = this._preSearchData;\n\n        tmpData = this.search_loop(tmpData);\n        this.sort_data(tmpData, this._sortingColumn, false);\n    }\n\n\n    exportBlob(format: string, contents: string) {\n        var URL = window.URL || window.webkitURL;\n        var blob = new Blob([contents], {type: 'text/' + format});\n\n        var a = document.createElement(\"a\"),\n            url = URL.createObjectURL(blob);\n        a.href = url;\n        a.download = \"data.\" + format;\n        if(body != null) {\n            body.appendChild(a);\n        }\n        a.click();\n        setTimeout(function() {\n            if(body != null) {\n                body.removeChild(a);\n            }\n            window.URL.revokeObjectURL(url);\n        }, 0);\n\n    }\n\n    exportJSON() {\n        var format = \"json\";\n        var contents = JSON.stringify(this.state.data);\n        this.exportBlob(format, contents);\n    }\n\n    exportCSV() {\n        var format = \"csv\";\n        var contents = this.state.data.reduce(function(result, row) {\n            return result\n                + row.reduce(function(rowresult, cell, idx) {\n                    return rowresult\n                        + '\"'\n                        + cell.replace(/\"/g, '\"\"')\n                        + '\"'\n                        + (idx < row.length - 1 ? ',' : '');\n                }, '')\n                + \"\\n\";\n        }, '');\n        this.exportBlob(format, contents);\n    }\n\n    render() {\n        return (\n            <div className=\"Excel\">\n                {this._renderTable()}\n            </div>\n        );\n    }\n\n    _renderSearch() {\n        if (!this.state.search) {\n            return null;\n        }\n        return (\n            <tr onChange={this._search}>\n                {this.props.headers.map((_ignore, idx) => {\n                    return <td key={idx} class={this.props.columnClasses[idx]}><input type=\"text\" data-idx={idx}/></td>;\n                })}\n            </tr>\n        );\n    }\n\n    _renderResultRow() {\n//        console.log(\"4. resulted row: \", this._resultedRow);\n        return (\n            <div>\n            <table>\n            <tr onChange={this._search}>\n                {this.props.headers.map((_ignore, idx) => {\n                    if( idx == this.props.headers.length-1) {\n                        return <td key={idx} class={this.props.columnClasses[idx] + \" resRow\"}>{this.rowIdxToDisplay}</td>;\n                    } else {\n                        return <td key={idx}\n                                   class={this.props.columnClasses[idx] + \" resRow\"}>{this._resultedRow[idx]}</td>;\n                    }\n                })}\n            </tr>\n            </table>\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n//        console.log(\"Did update\");\n//        console.log(\"focus elem\", this._focusElem);\n        if( this._focusElem) {\n            this._focusElem.focus();\n        }\n    }\n\n    _renderTable() {\n        this.rowIdxToDisplay = 0;\n        var i;\n        for(i=0; i<this._resultedRow.length; i++) {\n//            console.log(\"col \", i, this.props.columnDataTypes[i]);\n            if(this.props.columnDataTypes[i] == \"int\") {\n                this._resultedRow[i] = 0;\n            } else if(this.props.columnDataTypes[i] == \"serial\") {\n                this._resultedRow[i] = 0;\n            }\n        }\n//        console.log(\"3. resulted row: \", this._resultedRow);\n\n        return (\n            <div>\n            <div>\n            <table>\n                <thead onClick={this._sort}>\n                <tr>{\n                    this.props.headers.map((title, idx) => {\n//                        console.log(\"idx\", idx, title);\n                        if (this.state.sortby === idx) {\n                            title += this.state.descending ? ' \\u2191' : ' \\u2193';\n                        }\n                        return <th key={idx} class={this.props.columnClasses[idx]}>{title}</th>;\n                    }, this)\n                }</tr>\n                </thead>\n            </table>\n            </div>\n            <div  class=\"tbl\">\n            <table>\n                <tbody onDoubleClick={this._showEditor}>\n                {this._renderSearch()}\n                {this.state.data.map(function (row, rowidx) {\n                    // console.log(\"row: \", row);\n                    var rowClass = \"notFinished\";\n                    this.rowIdxToDisplay += 1;\n                    return (\n                        <tr key={rowidx} class={rowClass}>{\n//                            Object.values(row).map((cell, idx) => {\n                            this.props.headers.map((cell, idx) => {\n                                var content = this.state.data[rowidx][cell];\n                                var edit = this.state.edit;\n                                if (edit && edit.row === rowidx && edit.cell === idx) {\n                                    content = (\n                                        <form onSubmit={this._save}>\n                                            <input type=\"text\" defaultValue={content} ref={c => (this._focusElem = c)} />\n                                        </form>\n                                    );\n                                }\n                                 if( this.props.columnDataTypes[idx] == \"int\" ) {\n                                    this._resultedRow[idx] += parseInt(content) || 0;\n                                } else if(this.props.columnDataTypes[idx] == \"serial\") {\n                                    this._resultedRow[idx] = this.rowIdxToDisplay;\n                                }\n                                if (this.props.columnDataTypes[idx] == 'link') {\n                                    if (edit && edit.row === rowidx && edit.cell === idx) {\n                                        return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}>{content}</td>;\n                                    }\n                                    var myRegexp = /^(?:https?:\\/\\/)?(?:[^@\\n]+@)?(?:www\\.)?([^:\\/\\n?]+)/img;\n                                    var match = myRegexp.exec(content);\n                                    var title = \" \";\n                                    if (match != null) {\n                                        title = match[1];\n                                        //console.log(\"idx\", idx, content, title);\n                                        return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}><a href={content} class={rowClass} target=\"_blank\">{title}</a></td>;\n                                    } else {\n                                        //console.log(\"idx: \", idx, \"content: \", content, \"title: \", title);\n                                        return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}>{content}</td>;\n                                    }\n                                } else if (this.props.columnDataTypes[idx] == 'serial') {\n                                    return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}>{this.rowIdxToDisplay}</td>;\n                                } else {\n                                    return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}>{content}</td>;\n                                }\n                            }, this)}\n                        </tr>\n                    );\n                }, this)}\n                </tbody>\n            </table>\n            </div>\n            {this._renderResultRow()}\n            </div>\n        );\n    }\n}\n\nexport default Excel\n\n\n","import React, {Component} from 'react';\r\nimport \"./Form_new_part.css\"\r\n\r\nclass Form_new_part extends Component<Props, State>{\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        (this:any).createComponent = this.createComponent.bind(this);\r\n        (this:any).fillCell = this.fillCell.bind(this);\r\n        (this:any).fastSearch = this.fastSearch.bind(this);\r\n        (this:any).getPartNumber = this.getPartNumber.bind(this);\r\n        this.state = {\r\n            part_number: \"\",\r\n        };\r\n    }\r\n\r\n    fetchData(url) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.responseType = 'json';\r\n        xhr.onload = () => {\r\n            var resp = xhr.response;\r\n            if(xhr.status == 404) {\r\n                alert(\"Returned 404\");\r\n                return;\r\n            }\r\n            console.log(\"responce: \", resp);\r\n            if(resp[\"success\"] != \"true\") {\r\n                alert(resp[\"error\"]);\r\n            } else {\r\n                document.getElementById(\"new_part\").reset();\r\n                document.getElementById(\"new_cell\").reset();\r\n            }\r\n        };\r\n        xhr.open('GET', url, true);\r\n        xhr.send(null);\r\n\r\n    }\r\n\r\n    getPartNumber(event) {\r\n        this.setState({part_number: event.target.value});\r\n    }\r\n\r\n    fastSearch(e: any) {\r\n        if(this.state.part_number == \"\") {\r\n            alert(\"Empty part number!\");\r\n        } else {\r\n            var res_request = \"/api/v1/part_numbers/createFast?part_number=\" + this.state.part_number;\r\n            console.log(res_request);\r\n            this.fetchData(res_request);\r\n        }\r\n    }\r\n\r\n    createComponent(e: any) {\r\n        e.preventDefault();\r\n        var res_request = \"/api/v1/part_numbers/create?\";\r\n        var i;\r\n        var cnt = 0;\r\n        for (i = 0; i < e.target.length; i++) {\r\n            if(e.target[i].type != \"text\") {\r\n                continue;\r\n            }\r\n            if(e.target[i].value != \"\") {\r\n                if(cnt != 0) {\r\n                    res_request += \"&\"\r\n                }\r\n                res_request += e.target[i].name + \"=\" + encodeURIComponent(e.target[i].value);\r\n                cnt++;\r\n            }\r\n        }\r\n        console.log(res_request);\r\n        if(cnt != 0) {\r\n            this.fetchData(res_request);\r\n        } else {\r\n            alert(\"Empty form!\");\r\n        }\r\n    }\r\n\r\n    fillCell(e: any) {\r\n        e.preventDefault();\r\n\r\n        var res_request = \"/api/v1/cells/create?\";\r\n        var i;\r\n        var cnt = 0;\r\n        for (i = 0; i < e.target.length; i++) {\r\n            if(e.target[i].type != \"text\") {\r\n                continue;\r\n            }\r\n            if(e.target[i].value != \"\") {\r\n                if(cnt != 0) {\r\n                    res_request += \"&\"\r\n                }\r\n                res_request += e.target[i].name + \"=\" + encodeURIComponent(e.target[i].value);\r\n                cnt++;\r\n            }\r\n        }\r\n        console.log(res_request);\r\n        if(cnt != 0) {\r\n            this.fetchData(res_request);\r\n        } else {\r\n            alert(\"Empty form!\");\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n        <div class=\"Row\">\r\n\r\n\r\n\r\n            <div className=\"container\">\r\n\r\n                <h2>Добавление нового компонента</h2>\r\n                <p>Заполните поля с описанием электронного компонента, который вы хотите внести в базу данных</p>\r\n\r\n                <form onSubmit={this.createComponent} id=\"new_part\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"part_number\">Part number</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"part_number\" name=\"part_number\" onChange={this.getPartNumber} placeholder=\"RC0402JR-07100RL\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div >\r\n                            <input type=\"button\" className=\"button\" id=\"FastSearch\" name=\"FastSearch\" value=\"Быстрый поиск\" onClick={this.fastSearch.bind(this)}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"description\" name=\"description\"\r\n                                   placeholder=\"RES SMD 100 OHM 5% 1/16W 0402\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"footprint\">Footprint</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"footprint\" name=\"footprint\" placeholder=\"0402\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"temperature\">Temperature</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"temperature\" name=\"temperature\" placeholder=\"-55°C ~ 155°C\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"manufacturer\">Manufacturer</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"manufacturer\" name=\"manufacturer\" placeholder=\"Yageo\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"ref_supplier\">Ref supplier</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"ref_supplier\" name=\"ref_supplier\" placeholder=\"https://www.terraelectronica.ru/product/336102\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"help_url\">Help URL</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"help_url\" name=\"help_url\" placeholder=\"https://www.digikey.com/product-detail/en/yageo/RC0402JR-07100RL/311-100JRCT-ND/729362\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"component_type\">Component type</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"component_type\" name=\"component_type\" placeholder=\"resistor\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"family_type\">Family type</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"family_type\" name=\"family_type\" placeholder=\"RC\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"component_series\">Component series</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"component_series\" name=\"component_series\" placeholder=\"RC\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"price_1_pcs\">Price for 1 pcs, USD</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"price_1_pcs\" name=\"price_1_pcs\" placeholder=\"0.0011\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"price_10_pcs\">Price for 10 pcs, USD</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"price_10_pcs\" name=\"price_10_pcs\" placeholder=\"0.001\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"price_100_pcs\">Price for 100 pcs, USD</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"price_100_pcs\" name=\"price_100_pcs\" placeholder=\"0.0007\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"price_1000_pcs\">Price for 1000 pcs, USD</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"price_1000_pcs\" name=\"price_1000_pcs\" placeholder=\"0.0003\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"datasheet_url\">Datasheet URL</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"datasheet_url\" name=\"datasheet_url\" placeholder=\"http://www.yageo.com/documents/recent/PYu-RC_Group_51_RoHS_L_10.pdf\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"statuss\">Part status</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"statuss\" name=\"status\" placeholder=\"active\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-submit\">\r\n                            <input type=\"submit\" id=\"submit\" name=\"submit\" value=\"Внести\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"container\">\r\n\r\n                <h2>Заполнение ячейки склада</h2>\r\n                <p>Задайте номер ячейки, артикул компонента, его количество, ссылку на поставщика </p>\r\n\r\n                <form  onSubmit={this.fillCell} id=\"new_cell\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"part_number\">Cell idx</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"cellIdx\" name=\"cellIdx\" placeholder=\"3A1\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"part_number\">Part number</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"part_number\" name=\"part_number\"\r\n                                   placeholder=\"RC0402JR-07100RL\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"qty\">Quantity</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"qty\" name=\"qty\" placeholder=\"50\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"supplier_link\">Supplier link</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"supplier_link\" name=\"supplier_link\" placeholder=\"https://www.digikey.com/product-detail/en/yageo/RC0402JR-07100RL/311-100JRCT-ND/729362\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <label htmlFor=\"notes\">Notes</label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <input type=\"text\" id=\"notes\" name=\"notes\" placeholder=\"Already used in hardware\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-submit\">\r\n                            <input type=\"submit\" id=\"submit2\" name=\"submit2\" value=\"Заполнить\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Form_new_part","/* @flow */\n\n//*\nimport React, {Component} from 'react';\nimport \"./Parcel.css\"\n\nvar invariant = require('invariant');\n\nvar IDX_OF_ISSUE_IDX = 0;\nvar IDX_ESTIMATION_TIME = 4;\n\nconst body = document.body;\n\ntype Props = {\n    search: boolean,\n    headers: Array<string>,\n    initialData: Array<Array<string>>,\n    columnClasses: Array<string>,\n    columnDataTypes: Array<string>,\n};\n\ntype EditState = {\n    row: number,\n    cell: number,\n};\n\ntype State = {\n    data: Array<Array<string>>,\n    sortby: ?string,\n    descending: boolean,\n    edit: ?EditState, // [row index, cell index],\n    search: boolean,\n    hideCompleted: boolean,\n};\n\nclass Parcel extends Component<Props, State>{\n    displayName: 'Excel';\n    _preSearchData: Array<Array<string>>;\n    _searchFields: Array<string>;\n    _sortingColumn: number;\n    _resultedRow: Array<string>;\n    rowIdxToDisplay: number;\n\n    _focusElem: ?HTMLInputElement;\n\n    constructor(props: Props) {\n        super(props);\n            this._preSearchData = this.props.initialData;\n        this.state = {\n            data: this.props.initialData,\n            sortby: null,\n            descending: false,\n            edit: null, // [row index, cell index],\n            search: this.props.search,\n            hideCompleted: false,\n        };\n        this._searchFields = Array(this.props.headers.length).join(\".\").split(\".\");\n        this._resultedRow = Array(this.props.headers.length).join(\".\").split(\".\");\n//        console.log(\"1. resulted row: \", this._resultedRow);\n        (this:any)._search = this._search.bind(this);\n        (this:any).search_loop = this.search_loop.bind(this);\n        (this:any)._showEditor = this._showEditor.bind(this);\n        (this:any)._renderSearch = this._renderSearch.bind(this);\n        (this:any)._sort = this._sort.bind(this);\n        (this:any)._save = this._save.bind(this);\n        (this:any).requestParcelsList = this.requestParcelsList.bind(this);\n    }\n\n    hideCompleted(hideCompletedFlag: boolean) {\n        this.setState( {\n            hideCompleted: hideCompletedFlag\n        });\n    }\n\n    componentWillMount() {\n//        console.log(\"componentWillMount\");\n    }\n\n    componentDidMount() {\n//        console.log(\"componentDidMount\");\n//        document.title = \"Warehouse\";\n        setInterval(this.requestParcelsList, 3000);\n//        this.fetchData(\"/api/v1/parcels\");\n    }\n\n    requestParcelsList() {\n//        console.log(\"requestParcelsList\");\n        this.fetchData(\"/api/v1/parcels\");\n    }\n\n    updateData(newData: Array<Array<string>>) {\n        var dataJson = newData;\n        for(let i = 0; i < newData.length; i++){\n            let childArray = newData[i];\n            for(let j = 0; j < childArray.length; j++){\n                if (childArray[j] == null) {\n                    console.log(\"null\", childArray[j]);\n                    childArray[j] = \"\";\n                }\n            }\n        }\n        // console.log(\"dataE: \", newData);\n        this.setState({\n                data: dataJson\n            });\n        this._preSearchData = dataJson;\n        var tmpData = this.search_loop(this._preSearchData);\n        this.sort_data(tmpData, this._sortingColumn, false);\n    }\n\n    sort_data(data, column, invert = true) {\n        this._sortingColumn = column;\n//        var data = this.state.data.slice();\n//        console.log(\"data to sort len: \", data.length);\n        var descending;\n        if (invert) {\n            descending = this.state.sortby === column && !this.state.descending;\n        } else {\n            descending = this.state.sortby === column && this.state.descending;\n        }\n            data.sort(  (a, b) => {\n                var aa = 0;\n                var bb = 0;\n                var col_name =  this.props.headers[column];\n                // console.log(\"column: \", col_name, this.props.columnDataTypes[col_name] );\n                if ((this.props.columnDataTypes[column] == 'numeric') || (this.props.columnDataTypes[column] == 'int')){\n                    // console.log(\"a: \", a[col_name], \"b: \", b[col_name]);\n                    if (a[col_name] != \"\") {\n                        aa = parseInt(a[col_name], 10);\n                    }\n                    if (b[col_name] != \"\") {\n                        bb = parseInt(b[col_name], 10);\n                    }\n                } else if (this.props.columnDataTypes[column] == 'alphaNumeric') {\n\n                    var reSingleDigit = /(?<!\\d)[\\d](?!\\d)/g;\n                    //console.log(\"a: \", a[col_name], \"b: \", b[col_name]);\n                    aa = a[col_name].replace(reSingleDigit, \"0$&\");\n                    bb = b[col_name].replace(reSingleDigit, \"0$&\");\n                    //console.log(a[col_name], \" --> \", aa, \". \", b[col_name], \" --> \", bb);\n\n                } else {\n                    // console.log(\"col: \", col_name, \"a: \", a[ this.props.headers[col_name] ], \"b: \", b[ this.props.headers[col_name] ]);\n                    aa = a[col_name];\n                    bb = b[col_name];\n                }\n                if (descending == false) {\n                    if ( aa < bb ) {    return -1;  }\n                    if ( aa > bb ) {    return 1;   }\n                    return 0;\n                } else {\n                    if ( aa < bb ) {    return 1;   }\n                    if ( aa > bb ) {    return -1;  }\n                    return 0;\n                }\n            });\n        this.setState({\n            data: data,\n            sortby: column,\n            descending: descending,\n        });\n    }\n\n    _sort(e: any) {\n        var column = e.target.cellIndex;\n        var data = this.state.data.slice();\n        this.sort_data(data, column);\n\n    }\n\n    _showEditor(e: any) {\n        this.setState({edit: {\n                row: parseInt(e.target.dataset.row, 10),\n                cell: e.target.cellIndex,\n            }});\n    }\n\n    postData(url, data) {\n        var request = new XMLHttpRequest();\n        request.open('POST', url, true);\n        request.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');\n\n        request.onreadystatechange = function() {//Вызывает функцию при смене состояния.\n           if(request.readyState == XMLHttpRequest.DONE && request.status == 200) {\n                // Запрос завершен. Здесь можно обрабатывать результат.\n            }\n}\n        request.send(JSON.stringify(data));\n\n    }\n\n    fetchData(url) {\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'json';\n        xhr.onload = () => {\n            var resp = xhr.response;\n            if(resp[\"success\"] != \"true\") {\n                alert(resp[\"error\"]);\n            } else {\n                if( \"data\" in resp) {\n                    var dataa = JSON.parse(resp[\"data\"]);\n                    if(dataa != null) {\n                        this.updateData(dataa);\n                    } else {\n                    }\n                } else {\n                }\n            }\n        };\n        xhr.open('GET', url, true);\n        xhr.send(null);\n\n    }\n\n\n    _save(e: any) {\n        e.preventDefault();\n        var input = e.target.firstChild;\n        var data = this.state.data.slice();\n        var rowIdx = this.state.edit.row;\n        var colIdx = this.state.edit.cell;\n        var colName = this.props.headers[colIdx];\n        var val = input.value;\n        var id = this.state.data[rowIdx][ this.props.headers[0] ];\n        var part_number = this.state.data[rowIdx][ this.props.headers[4] ];\n        console.log(\"param \", colName, \" val \", val);\n        this.fetchData(\"/api/v1/cell/\"+id+\"?action=update&\" + \"param=\" + colName + \"&val=\"+encodeURIComponent(val)+\"&part_number=\"+part_number);\n\n\n\n        invariant(this.state.edit, \"edit field can't be undefined here!\");\n        data[this.state.edit.row][this.state.edit.cell] = input.value;\n        this.setState({\n            edit: null,\n            data: data,\n        });\n    }\n\n\n    search_loop(tmpData) {\n        var idx = 0;\n        var needle = \"\";\n        // console.log(\"tmpData: \", tmpData);\n        for (var i = 0; i < this._searchFields.length; i++) {\n            idx = i;\n            needle = this._searchFields[i];\n            if (needle == \"\") {\n                continue;\n            }\n            tmpData = tmpData.filter( (row) => {\n                if ((this.props.columnDataTypes[i] == 'numeric') || (this.props.columnDataTypes[i] == 'int')){\n//                    console.log(\"numeric search\");\n                    return row[this.props.headers[idx]] == needle;\n                } else {\n//                    console.log(\"string search\");\n                    return row[this.props.headers[idx]].toString().toLowerCase().indexOf(needle) > -1;\n                }\n//                return row[ this.props.headers[idx] ].toString().toLowerCase().indexOf(needle) > -1;\n            });\n        }\n//        console.log(\"search res dataset length: \", tmpData.length);\n        return tmpData;\n    }\n\n    _search(e: any) {\n        var needle = e.target.value.toLowerCase();\n        var idx = e.target.dataset.idx;\n        this._searchFields[idx] = needle;\n\n//        console.log(\"search: \", this._searchFields);\n        var tmpData = this._preSearchData;\n\n        tmpData = this.search_loop(tmpData);\n        this.sort_data(tmpData, this._sortingColumn, false);\n    }\n\n\n    exportBlob(format: string, contents: string) {\n        var URL = window.URL || window.webkitURL;\n        var blob = new Blob([contents], {type: 'text/' + format});\n\n        var a = document.createElement(\"a\"),\n            url = URL.createObjectURL(blob);\n        a.href = url;\n        a.download = \"data.\" + format;\n        if(body != null) {\n            body.appendChild(a);\n        }\n        a.click();\n        setTimeout(function() {\n            if(body != null) {\n                body.removeChild(a);\n            }\n            window.URL.revokeObjectURL(url);\n        }, 0);\n\n    }\n\n    exportJSON() {\n        var format = \"json\";\n        var contents = JSON.stringify(this.state.data);\n        this.exportBlob(format, contents);\n    }\n\n    exportCSV() {\n        var format = \"csv\";\n        var contents = this.state.data.reduce(function(result, row) {\n            return result\n                + row.reduce(function(rowresult, cell, idx) {\n                    return rowresult\n                        + '\"'\n                        + cell.replace(/\"/g, '\"\"')\n                        + '\"'\n                        + (idx < row.length - 1 ? ',' : '');\n                }, '')\n                + \"\\n\";\n        }, '');\n        this.exportBlob(format, contents);\n    }\n\n    render() {\n        return (\n            <div className=\"Excel\">\n                {this._renderTable()}\n            </div>\n        );\n    }\n\n    _renderSearch() {\n        if (!this.state.search) {\n            return null;\n        }\n        return (\n            <tr onChange={this._search}>\n                {this.props.headers.map((_ignore, idx) => {\n                    return <td key={idx} class={this.props.columnClasses[idx]}><input type=\"text\" data-idx={idx}/></td>;\n                })}\n            </tr>\n        );\n    }\n\n    _renderResultRow() {\n//        console.log(\"4. resulted row: \", this._resultedRow);\n        return (\n            <div>\n            <table>\n            <tr onChange={this._search}>\n                {this.props.headers.map((_ignore, idx) => {\n                    if( idx == this.props.headers.length-1) {\n                        return <td key={idx} class={this.props.columnClasses[idx] + \" resRow\"}>{this.rowIdxToDisplay}</td>;\n                    } else {\n                        return <td key={idx}\n                                   class={this.props.columnClasses[idx] + \" resRow\"}>{this._resultedRow[idx]}</td>;\n                    }\n                })}\n            </tr>\n            </table>\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n//        console.log(\"Did update\");\n//        console.log(\"focus elem\", this._focusElem);\n        if( this._focusElem) {\n            this._focusElem.focus();\n        }\n    }\n\n    _renderTable() {\n        this.rowIdxToDisplay = 0;\n        var i;\n        for(i=0; i<this._resultedRow.length; i++) {\n//            console.log(\"col \", i, this.props.columnDataTypes[i]);\n            if(this.props.columnDataTypes[i] == \"int\") {\n                this._resultedRow[i] = 0;\n            } else if(this.props.columnDataTypes[i] == \"serial\") {\n                this._resultedRow[i] = 0;\n            }\n        }\n//        console.log(\"3. resulted row: \", this._resultedRow);\n\n        return (\n            <div>\n            <div>\n            <table>\n                <thead onClick={this._sort}>\n                <tr>{\n                    this.props.headers.map((title, idx) => {\n//                        console.log(\"idx\", idx, title);\n                        if (this.state.sortby === idx) {\n                            title += this.state.descending ? ' \\u2191' : ' \\u2193';\n                        }\n                        return <th key={idx} class={this.props.columnClasses[idx]}>{title}</th>;\n                    }, this)\n                }</tr>\n                </thead>\n            </table>\n            </div>\n            <div  class=\"tbl\">\n            <table>\n                <tbody onDoubleClick={this._showEditor}>\n                {this._renderSearch()}\n                {this.state.data.map(function (row, rowidx) {\n                    // console.log(\"row: \", row);\n                    var rowClass = \"notFinished\";\n                    this.rowIdxToDisplay += 1;\n                    return (\n                        <tr key={rowidx} class={rowClass}>{\n//                            Object.values(row).map((cell, idx) => {\n                            this.props.headers.map((cell, idx) => {\n                                var content = this.state.data[rowidx][cell];\n                                var edit = this.state.edit;\n                                if (edit && edit.row === rowidx && edit.cell === idx) {\n                                    content = (\n                                        <form onSubmit={this._save}>\n                                            <input type=\"text\" defaultValue={content} ref={c => (this._focusElem = c)} />\n                                        </form>\n                                    );\n                                }\n                                 if( this.props.columnDataTypes[idx] == \"int\" ) {\n                                    this._resultedRow[idx] += parseInt(content) || 0;\n                                } else if(this.props.columnDataTypes[idx] == \"serial\") {\n                                    this._resultedRow[idx] = this.rowIdxToDisplay;\n                                }\n                                if (this.props.columnDataTypes[idx] == 'link') {\n                                    if (edit && edit.row === rowidx && edit.cell === idx) {\n                                        return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}>{content}</td>;\n                                    }\n                                    var myRegexp = /^(?:https?:\\/\\/)?(?:[^@\\n]+@)?(?:www\\.)?([^:\\/\\n?]+)/img;\n                                    var match = myRegexp.exec(content);\n                                    var title = \" \";\n                                    if (match != null) {\n                                        title = match[1];\n                                        //console.log(\"idx\", idx, content, title);\n                                        return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}><a href={content} class={rowClass} target=\"_blank\">{title}</a></td>;\n                                    } else {\n                                        //console.log(\"idx: \", idx, \"content: \", content, \"title: \", title);\n                                        return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}>{content}</td>;\n                                    }\n                                } else if (this.props.columnDataTypes[idx] == 'serial') {\n                                    return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}>{this.rowIdxToDisplay}</td>;\n                                } else {\n                                    return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}>{content}</td>;\n                                }\n                            }, this)}\n                        </tr>\n                    );\n                }, this)}\n                </tbody>\n            </table>\n            </div>\n            {this._renderResultRow()}\n            </div>\n        );\n    }\n}\n\nexport default Parcel\n\n\n","/* @flow */\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction Button(props: Object) {\n    const cssclasses = classNames(\"Button\", props.className);\n    return props.href\n        ? <a {...props} className={cssclasses} />\n        : <button {...props} className={cssclasses} />;\n}\n\nButton.propTypes = {\n    href: PropTypes.string,\n};\n\nexport default Button","/* @flow */\n\n//*\nimport React, {Component} from 'react';\nimport \"./Device.css\"\nimport Button from \"./Button\"\nimport axios, { post } from 'axios';\nimport Select from 'react-select';\n\nvar invariant = require('invariant');\n\nvar IDX_OF_ISSUE_IDX = 0;\nvar IDX_ESTIMATION_TIME = 4;\n\nvar options = [\n    { value: 'chocolate', label: 'Chocolate' },\n    { value: 'strawberry', label: 'Strawberry' },\n    { value: 'vanilla', label: 'Vanilla' },\n];\n\nconst body = document.body;\n\ntype Props = {\n    search: boolean,\n    headers: Array<string>,\n    initialData: Array<Array<string>>,\n    columnClasses: Array<string>,\n    columnDataTypes: Array<string>,\n};\n\ntype EditState = {\n    row: number,\n    cell: number,\n};\n\ntype State = {\n    data: Array<Array<string>>,\n    sortby: ?string,\n    descending: boolean,\n    edit: ?EditState, // [row index, cell index],\n    search: boolean,\n    hideCompleted: boolean,\n};\n\nclass Device extends Component<Props, State>{\n    displayName: 'Excel';\n    _preSearchData: Array<Array<string>>;\n    _searchFields: Array<string>;\n    _sortingColumn: number;\n    _resultedRow: Array<string>;\n    rowIdxToDisplay: number;\n\n    _focusElem: ?HTMLInputElement;\n\n    constructor(props: Props) {\n        super(props);\n            this._preSearchData = this.props.initialData;\n        this.state = {\n            data: this.props.initialData,\n            bomSoldered: null,\n            sortby: null,\n            descending: false,\n            edit: null, // [row index, cell index],\n            search: this.props.search,\n            hideCompleted: false,\n            selectedOption: null,\n            deviceList: null,\n            selectedDevice: null,\n            sortColumn: \"\"\n        };\n        this._searchFields = Array(this.props.headers.length).join(\".\").split(\".\");\n        this._resultedRow = Array(this.props.headers.length).join(\".\").split(\".\");\n        (this:any)._search = this._search.bind(this);\n        (this:any).search_loop = this.search_loop.bind(this);\n        (this:any)._showEditor = this._showEditor.bind(this);\n        (this:any)._renderSearch = this._renderSearch.bind(this);\n        (this:any)._sort = this._sort.bind(this);\n        (this:any).importJSON = this.importJSON.bind(this);\n        (this:any)._save = this._save.bind(this);\n        (this:any)._renderButton = this._renderButton.bind(this);\n        this._markSoldered = this._markSoldered.bind(this);\n\n    }\n\n    hideCompleted(hideCompletedFlag: boolean) {\n        this.setState( {\n            hideCompleted: hideCompletedFlag\n        });\n    }\n\n    componentWillMount() {\n    }\n\n    solderingSequenceCleanup() {\n        var bomSolderedFlag = [];\n        for(var i=0; i<300; i++) { // To-Do: think how to handle it\n            bomSolderedFlag.push(false);\n        }\n        this.setState({\n            bomSoldered: bomSolderedFlag\n        });\n    }\n\n    componentDidMount() {\n        this.fetchData(\"/api/v1/deviceList\");\n        this.solderingSequenceCleanup();\n        options.push( { value: 'orange', label: 'Orange' } );\n    }\n\n    updateData(newData: Array<Array<string>>) {\n        var dataJson = newData;\n        for(let i = 0; i < newData.length; i++){\n            let childArray = newData[i];\n            for(let j = 0; j < childArray.length; j++){\n                if (childArray[j] == null) {\n                    console.log(\"null\", childArray[j]);\n                    childArray[j] = \"\";\n                }\n            }\n        }\n        console.log(\"bom size: \", dataJson.length);\n        // var bomSolderedFlag = [];\n        // for(var i=0; i<dataJson.length; i++) {\n        //     bomSolderedFlag.push(false);\n        // }\n        this.setState({\n                data: dataJson\n                // bomSoldered: bomSolderedFlag\n            });\n        this._preSearchData = dataJson;\n        var tmpData = this.search_loop(this._preSearchData);\n        this.sort_data(tmpData, this._sortingColumn, false);\n    }\n\n    sort_data(data, column, invert = true) {\n        this._sortingColumn = column;\n        var descending;\n        if (invert) {\n            descending = this.state.sortby === column && !this.state.descending;\n        } else {\n            descending = this.state.sortby === column && this.state.descending;\n        }\n            data.sort(  (a, b) => {\n                var aa = 0;\n                var bb = 0;\n                var col_name =  this.props.headers[column];\n                // console.log(\"column: \", col_name, this.props.columnDataTypes[col_name] );\n                if ((this.props.columnDataTypes[column] == 'numeric') || (this.props.columnDataTypes[column] == 'int')){\n                    // console.log(\"a: \", a[col_name], \"b: \", b[col_name]);\n                    if (a[col_name] != \"\") {\n                        aa = parseInt(a[col_name], 10);\n                    }\n                    if (b[col_name] != \"\") {\n                        bb = parseInt(b[col_name], 10);\n                    }\n                } else if (this.props.columnDataTypes[column] == 'alphaNumeric') {\n\n                    var reSingleDigit = /(?<!\\d)[\\d](?!\\d)/g;\n                    aa = a[col_name].replace(reSingleDigit, \"0$&\");\n                    bb = b[col_name].replace(reSingleDigit, \"0$&\");\n\n                } else {\n                    aa = a[col_name];\n                    bb = b[col_name];\n                }\n                if (descending == false) {\n                    if ( aa < bb ) {    return -1;  }\n                    if ( aa > bb ) {    return 1;   }\n                    return 0;\n                } else {\n                    if ( aa < bb ) {    return 1;   }\n                    if ( aa > bb ) {    return -1;  }\n                    return 0;\n                }\n            });\n        this.setState({\n            data: data,\n            sortby: column,\n            descending: descending,\n        });\n    }\n\n    _sort(e: any) {\n        var column = e.target.cellIndex;\n        console.log(\"sortColumn: \", column, this.props.headers[column]);\n        this.setState({\n            sortColumn: this.props.headers[column]\n        });\n\n        var data = this.state.data.slice();\n        this.solderingSequenceCleanup();\n        this.sort_data(data, column);\n\n    }\n\n    _showEditor(e: any) {\n        this.setState({edit: {\n                row: parseInt(e.target.dataset.row, 10),\n                cell: e.target.cellIndex,\n            }});\n    }\n\n    _markSoldered(e: any) {\n        if (this.state.sortColumn != \"soldersequence\") {\n//            alert(\"soldering allowed only by solder sequence\");\n            return;\n        }\n        var column = e.target.cellIndex;\n        var row = parseInt(e.target.dataset.row, 10);\n        // var cell = e.target.cellIndex;\n        var cellIdx = this.state.data[row][ this.props.headers[5] ];\n        var qty = this.state.data[row][ this.props.headers[2] ];\n        if ( column == 7) {\n            console.log(\" row \", row, \" cellIdx \", cellIdx, \" qty \", qty);\n            this.fetchData(\"/api/v1/cellComponentsSoldered?cellIdx=\" + cellIdx + \"&qty=\" + qty);\n            var tmp = this.state.bomSoldered;\n            tmp[row] = true;\n            this.setState({\n                bomSoldered: tmp\n            });\n        }\n    }\n\n    checkIfResponceValid(resp) {\n        if(resp[\"success\"] != \"true\") {\n            if (typeof resp[\"error\"] != \"string\") {\n                alert(resp[\"error\"][\"Message\"]);\n                console.log(resp[\"error\"][\"Message\"]);\n                return false\n            } else {\n                alert(resp[\"error\"]);\n                console.log(resp[\"error\"]);\n                return false\n            }\n        }\n        return true\n    }\n\n    fetchData(url) {\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'json';\n        console.log(\"fetchData: \", url);\n        xhr.onload = () => {\n            var resp = xhr.response;\n            // if(resp[\"success\"] != \"true\") {\n            //     if (typeof resp[\"error\"] != \"string\") {\n            //         alert(resp[\"error\"][\"Message\"]);\n            //         console.log(resp[\"error\"][\"Message\"]);\n            //     } else {\n            //         alert(resp[\"error\"]);\n            //         console.log(resp[\"error\"]);\n            //     }\n            // } else {\n                // if( \"data\" in resp) {\n                    var selectedDevice = this.state.selectedDevice;\n                    if( url == \"/api/v1/deviceList\") {\n                        if (this.checkIfResponceValid(resp) == false) { return; }\n                        var jsonTmp1 = resp[\"data\"].replace(new RegExp(\"device_id\", 'g'), \"value\");\n                        var jsonTmp2 = jsonTmp1.replace(new RegExp(\"device_name\", 'g'), \"label\");\n                        var dataa = JSON.parse(jsonTmp2);\n                        this.setState({\n                            deviceList: dataa,\n                            selectedDevice: dataa[0],\n                        });\n                        this.fetchData(\"/api/v1/deviceBom?device_id=\" + dataa[0][\"value\"]);\n                        // this.fetchData(\"/api/v1/deviceBom?device_id=\" + this.state.selectedDevice[\"value\"]);\n                    }\n                    else if( url.indexOf(\"/api/v1/deviceBomUpdate\") !== -1) {\n                        console.log(\"fetchData deviceBomUpdate\");\n                        if (this.checkIfResponceValid(resp) == false) { return; }\n                        this.fetchData(\"/api/v1/deviceBom?device_id=\" + this.state.selectedDevice[\"value\"]);\n                    }\n                    else if( url.indexOf(\"/api/v1/deviceBom\") !== -1) {\n                        if (this.checkIfResponceValid(resp) == false) { return; }\n                        var jsonTmp1 = resp[\"data\"].replace(new RegExp(\"qty\", 'g'), \"perDevice\");\n                        var jsonTmp2 = jsonTmp1.replace(new RegExp(\"null\", 'g'), \"0\");\n                        var deviceBom = JSON.parse(jsonTmp2);\n                        this.updateData(deviceBom);\n                    }\n                    else if( url.indexOf(\"/api/v1/cellComponentsSoldered\") !== -1 ) {\n                        if(resp[\"success\"] != \"true\") {\n                            var cellIdx = prompt(resp[\"error\"] + \"enter new cellIdx\", \"Null\");\n                            if (cellIdx == null || cellIdx == \"\") {\n                                console.log(\"new cell idx not entered\");\n                            } else {\n                                console.log(\"new cell idx: \", cellIdx);\n                            }\n                        }\n                        this.fetchData(\"/api/v1/deviceBom?device_id=\" + this.state.selectedDevice[\"value\"]);\n                    }\n                    else {\n                        // if (this.checkIfResponceValid(resp) == false) { return; }\n                        console.log(\"unhandled url:\", url);\n                    }\n                // } else {\n                // }\n            // }\n        };\n        xhr.open('GET', url, true);\n        xhr.send(null);\n\n    }\n\n\n    _save(e: any) {\n        e.preventDefault();\n        var input = e.target.firstChild;\n        var data = this.state.data.slice();\n        var rowIdx = this.state.edit.row;\n        var colIdx = this.state.edit.cell;\n        var colName = this.props.headers[colIdx];\n        var val = input.value;\n        var device_id = this.state.selectedDevice[\"value\"];\n        var part_number = this.state.data[rowIdx][ this.props.headers[0] ];\n        // console.log(\"device_id \", device_id, \" part_number \", part_number, \" param \", colName, \" val \", val);\n        this.fetchData(\"/api/v1/deviceBomUpdate/\"+device_id+\"?action=update&\" + \"param=\" + colName + \"&val=\"+encodeURIComponent(val)+\"&part_number=\"+part_number);\n\n\n\n        // invariant(this.state.edit, \"edit field can't be undefined here!\");\n        // data[this.state.edit.row][this.state.edit.cell] = input.value;\n        this.setState({\n            edit: null,\n            data: data,\n        });\n    }\n\n\n    search_loop(tmpData) {\n        var idx = 0;\n        var needle = \"\";\n        // console.log(\"tmpData: \", tmpData);\n        for (var i = 0; i < this._searchFields.length; i++) {\n            idx = i;\n            needle = this._searchFields[i];\n            if (needle == \"\") {\n                continue;\n            }\n            tmpData = tmpData.filter( (row) => {\n                if ((this.props.columnDataTypes[i] == 'numeric') || (this.props.columnDataTypes[i] == 'int')){\n                    return row[this.props.headers[idx]] == needle;\n                } else {\n                    return row[this.props.headers[idx]].toString().toLowerCase().indexOf(needle) > -1;\n                }\n            });\n        }\n        return tmpData;\n    }\n\n    _search(e: any) {\n        var needle = e.target.value.toLowerCase();\n        var idx = e.target.dataset.idx;\n        this._searchFields[idx] = needle;\n\n//        console.log(\"search: \", this._searchFields);\n        var tmpData = this._preSearchData;\n\n        tmpData = this.search_loop(tmpData);\n        this.sort_data(tmpData, this._sortingColumn, false);\n    }\n\n\n    exportBlob(format: string, contents: string) {\n        var URL = window.URL || window.webkitURL;\n        var blob = new Blob([contents], {type: 'text/' + format});\n\n        var a = document.createElement(\"a\"),\n            url = URL.createObjectURL(blob);\n        a.href = url;\n        a.download = \"data.\" + format;\n        if(body != null) {\n            body.appendChild(a);\n        }\n        a.click();\n        setTimeout(function() {\n            if(body != null) {\n                body.removeChild(a);\n            }\n            window.URL.revokeObjectURL(url);\n        }, 0);\n\n    }\n\n    exportJSON() {\n        var format = \"json\";\n        var contents = JSON.stringify(this.state.data);\n        this.exportBlob(format, contents);\n    }\n\n    exportCSV() {\n        var format = \"csv\";\n        var contents = this.state.data.reduce(function(result, row) {\n            return result\n                + row.reduce(function(rowresult, cell, idx) {\n                    return rowresult\n                        + '\"'\n                        + cell.replace(/\"/g, '\"\"')\n                        + '\"'\n                        + (idx < row.length - 1 ? ',' : '');\n                }, '')\n                + \"\\n\";\n        }, '');\n        this.exportBlob(format, contents);\n    }\n\n    importJSON_ = (e) => {\n        const data = new FormData();\n        data.append('file', e.target.value);\n        console.log(data);\n    }\n\n    importJSON(event) {\n        let file = event.target.files[0];\n        console.log(file);\n\n        var deviceName = prompt(\"Enter device name\", \"GW-01-Rev3-868\");\n        if (deviceName == null || deviceName == \"\") {\n            console.log(\"FAIL. Empty device name\");\n            alert(\"FAIL. Empty device name\");\n            return\n        }\n        if (file) {\n            let data = new FormData();\n            data.append('file', file);\n            // this.fetchData('/api/v1/deviceUploadName');\n            this.fetchData('/api/v1/deviceUploadName?deviceName=' + deviceName);\n            post('/api/v1/deviceUpload', data).then(function (response) {\n                console.log(\"Post response: \", response);\n                if(response[\"data\"][\"success\"] != \"true\") {\n                    console.log(\"ERROR!:\", response[\"data\"][\"error\"]);\n                    alert(response[\"data\"][\"error\"]);\n                }\n            }).catch(function (error) {\n                console.log(\"Post error: \", error);\n            });\n            console.log(data);\n        }\n\n    }\n\n    handleChange = selectedOption => {\n        console.log(`Option selected:`, selectedOption);\n        this.setState({\n            selectedDevice: selectedOption,\n        });\n        this.fetchData(\"/api/v1/deviceBom?device_id=\" + selectedOption[\"value\"]);\n    };\n\n    _renderButton() {\n        const { selectedOption } = this.state;\n        return(\n            <div>\n                <div class=\"inner\">\n                    <input type=\"file\"\n                       name=\"myFile\"\n                       onChange={this.importJSON} />\n                </div>\n                <div class=\"inner dropdown\">\n                    <Select\n                        value={this.state.selectedDevice}\n                        onChange={this.handleChange}\n                        options={this.state.deviceList}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n\n    render() {\n        return (\n            <div className=\"Excel\">\n                {this._renderButton()}\n                {this._renderTable()}\n            </div>\n        );\n    }\n\n    _renderSearch() {\n        if (!this.state.search) {\n            return null;\n        }\n        return (\n            <tr onChange={this._search}>\n                {this.props.headers.map((_ignore, idx) => {\n                    return <td key={idx} class={this.props.columnClasses[idx]}><input type=\"text\" data-idx={idx}/></td>;\n                })}\n            </tr>\n        );\n    }\n\n    _renderResultRow() {\n        return (\n            <div>\n            <table>\n            <tr onChange={this._search}>\n                {this.props.headers.map((_ignore, idx) => {\n                    if( idx == this.props.headers.length-1) {\n                        return <td key={idx} class={this.props.columnClasses[idx] + \" resRow\"}>{this.rowIdxToDisplay}</td>;\n                    } else {\n                        return <td key={idx}\n                                   class={this.props.columnClasses[idx] + \" resRow\"}>{this._resultedRow[idx]}</td>;\n                    }\n                })}\n            </tr>\n            </table>\n            </div>\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if( this._focusElem) {\n            this._focusElem.focus();\n        }\n    }\n\n    _renderTable() {\n        this.rowIdxToDisplay = 0;\n        var i;\n        for(i=0; i<this._resultedRow.length; i++) {\n//            console.log(\"col \", i, this.props.columnDataTypes[i]);\n            if(this.props.columnDataTypes[i] == \"int\") {\n                this._resultedRow[i] = 0;\n            } else if(this.props.columnDataTypes[i] == \"serial\") {\n                this._resultedRow[i] = 0;\n            }\n        }\n\n        return (\n            <div>\n            <div>\n            <table>\n                <thead onClick={this._sort}>\n                <tr >{\n                    this.props.headers.map((title, idx) => {\n//                        console.log(\"idx\", idx, title);\n                        if (this.state.sortby === idx) {\n                            title += this.state.descending ? ' \\u2191' : ' \\u2193';\n                        }\n                        return <th key={idx} class={this.props.columnClasses[idx]}>{title}</th>;\n                    }, this)\n                }</tr>\n                </thead>\n            </table>\n            </div>\n            <div  class=\"tbl\">\n            <table>\n                <tbody onDoubleClick={this._showEditor} onClick={this._markSoldered}>\n                {this._renderSearch()}\n                {this.state.data.map(function (row, rowidx) {\n                    var rowClass = \"notFinished\";\n                    if( this.state.bomSoldered[rowidx] == true) {\n                        rowClass = \"finished_\";\n                    }\n                    this.rowIdxToDisplay += 1;\n                    return (\n                        <tr key={rowidx} class={rowClass}>{\n//                            Object.values(row).map((cell, idx) => {\n                            this.props.headers.map((cell, idx) => {\n                                var content = this.state.data[rowidx][cell];\n                                var edit = this.state.edit;\n                                if (edit && edit.row === rowidx && edit.cell === idx) {\n                                    content = (\n                                        <form onSubmit={this._save}>\n                                            <input type=\"text\" defaultValue={content} ref={c => (this._focusElem = c)} />\n                                        </form>\n                                    );\n                                }\n                                 if( this.props.columnDataTypes[idx] == \"int\" ) {\n                                    this._resultedRow[idx] += parseInt(content) || 0;\n                                } else if(this.props.columnDataTypes[idx] == \"serial\") {\n                                    this._resultedRow[idx] = this.rowIdxToDisplay;\n                                }\n                                if (this.props.columnDataTypes[idx] == 'link') {\n                                    if (edit && edit.row === rowidx && edit.cell === idx) {\n                                        return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}>{content}</td>;\n                                    }\n                                    var myRegexp = /^(?:https?:\\/\\/)?(?:[^@\\n]+@)?(?:www\\.)?([^:\\/\\n?]+)/img;\n                                    var match = myRegexp.exec(content);\n                                    var title = \" \";\n                                    if (match != null) {\n                                        title = match[1];\n                                        //console.log(\"idx\", idx, content, title);\n                                        return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}><a href={content} class={rowClass} target=\"_blank\">{title}</a></td>;\n                                    } else {\n                                        //console.log(\"idx: \", idx, \"content: \", content, \"title: \", title);\n                                        return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}>{content}</td>;\n                                    }\n                                } else if (this.props.columnDataTypes[idx] == 'serial') {\n                                    return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}>{this.rowIdxToDisplay}</td>;\n                                } else {\n                                    return <td class={this.props.columnClasses[idx]} key={idx} data-row={rowidx}>{content}</td>;\n                                }\n                            }, this)}\n                        </tr>\n                    );\n                }, this)}\n                </tbody>\n            </table>\n            </div>\n            {this._renderResultRow()}\n            </div>\n        );\n    }\n}\n\nexport default Device\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Excel from \"./components/Excel\";\nimport Form_new_part from \"./components/Form_new_part\";\nimport {Tabs, TabLink, TabContent} from 'react-tabs-redux';\nimport Parcel from \"./components/Parcel\";\nimport Device from \"./components/Device\";\n\nvar invariant = require('invariant');\n\ntype Props = {\n};\n\ntype State = {\n    renderFlag : boolean,\n};\n\nclass App extends Component<Props, State> {\n\n  excel: ?Excel;\n  parcel: ?Parcel;\n  device: ?Device;\n  sprintTasksTotal: any;\n  data: any;\n\n  constructor(props: Props, state: State) {\n    super(props, state);\n    this.httpRequest = this.httpRequest.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.hideCompletedTasks = this.hideCompletedTasks.bind(this);\n    this.state = {isChecked: false};\n  }\n\n  componentDidMount() {\n      document.title = \"Warehouse\";\n      setInterval(this.fetchData, 3000);\n      this.fetchData();\n  }\n  triggerJson() {\n    invariant(this.excel, \"excel component is null!\");\n    this.excel.exportJSON();\n  }\n\n  triggerCsv() {\n    invariant(this.excel, \"excel component is null!\");\n    this.excel.exportCSV();\n  }\n\n  componentWillMount(){\n      // console.log(\"will mount\");\n      this.fetchData();\n  }\n\n  fetchData() {\n      var xhr = new XMLHttpRequest();\n      xhr.responseType = 'json';\n      xhr.onload = () => {\n          data = xhr.response;\n          this.setState( {\n              renderFlag: true\n          });\n          // console.log(\"data App: \", data);\n          var myJSON = JSON.stringify(data, function(key, value) { return (value == null) ? \"\" : value });\n          // console.log(\"typeof myJSON: \", typeof myJSON);\n          data = JSON.parse(myJSON);\n          this.excel.updateData(data);\n      };\n      xhr.open('GET', '/warehouse', true);\n      xhr.send(null);\n\n  }\n\n  httpRequest() {\n      var xhr = new XMLHttpRequest();\n      xhr.onload = () => {\n          data = xhr.response;\n          // console.log(\"dataAppH: \", data);\n          this.excel.updateData(data);\n      };\n      xhr.open('GET', '/warehouse', true);\n      xhr.send(null);\n  }\n\n  hideCompletedTasks() {\n      this.excel.hideCompleted(!this.state.isChecked);\n      this.setState({isChecked: !this.state.isChecked});\n  }\n\n  render() {\n      var txt;\n      if(this.state.isChecked) {\n          txt = 'hide';\n      } else {\n          txt = 'show';\n      }\n    return (\n        <Tabs className=\"tabs tabs-1\">\n            <TabLink to=\"tab1\">Warehouse</TabLink>\n            <TabLink to=\"tab2\">Add HW</TabLink>\n            <TabLink to=\"tab3\">Parcel</TabLink>\n            <TabLink to=\"tab4\">Device</TabLink>\n            <TabContent for=\"tab1\">\n                <div>\n                    <Excel ref={excel => (this.excel = excel)} columnDataTypes={columnDataTypes} columnClasses={columnClasses} headers={headers} initialData={data} search={true}/>\n                </div>\n            </TabContent>\n            <TabContent for=\"tab2\">\n                <h2>\n                    <Form_new_part></Form_new_part>\n                </h2>\n            </TabContent>\n            <TabContent for=\"tab3\">\n                <div>\n                    <Parcel ref={parcel => (this.parcel = parcel)} columnDataTypes={columnDataTypes2} columnClasses={columnClasses2} headers={headers2} initialData={data2} search={true}/>\n                </div>\n            </TabContent>\n            <TabContent for=\"tab4\">\n                <div>\n                    <Device ref={device => (this.device = device)} columnDataTypes={columnDataTypes3} columnClasses={columnClasses3} headers={headers3} initialData={data3} search={true}/>\n                </div>\n            </TabContent>\n        </Tabs>\n        );\n  }\n}\n\n/*\n\n*/\n\n//<div>\n//    <Button onClick={this.triggerJson.bind(this)}>Export JSON</Button>\n//    <Button onClick={this.triggerCsv.bind(this)}>Export CSV</Button>\n//    <Button onClick={this.httpRequest.bind(this)}>Http request</Button>\n//    <input type=\"checkbox\" id=\"status\" onClick={this.hideCompletedTasks.bind(this)}/>\n//    <label htmlFor=\"status\" className=\"button\">\n//        <Button>{txt} completed</Button>\n//    </label>\n//</div>\n\n\n// string - just string\n// int - int that we summarize in resulted row\n// numeric - int that we don't need to be in resulted row\n// serial - int that we show incremented in resulted row\n\nvar columnDataTypes =   [ 'alphaNumeric',     'string',       'string',       'link',     'string',       'numeric',  'link',             'link',             'string',       'string',   'serial'];\nvar columnClasses =     [ 'short',      'long',         'long',         'long',     'long',         'short',    'long',             'long',             'long',         'long',     'short'];\nvar headers =           [ 'cellidx',    'description',  'footprint',    'help_url', 'part_number',  'qty',      'ref_supplier',     'supplier_link',    'temperature',  'notes',    'idx'];\nvar data = [];//[['DEV-778', 'Jan 09', 'Александр Маслов, Сергей Биртанов', 'Low', 'In Progress', '7'], ['METH-230', 'Jan 09', 'Артур Сапрыкин', 'Medium', 'In Progress', '7'], ['PRD-327', 'Jan 09', 'Александр Маслов, Василий Ганич, Баина Корнякова, Роман Зверев', 'Medium', 'In Progress', '6'], ['DEV-722', 'Jan 09', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-642', 'Jan 09', 'Александр Сенюк', 'Medium', 'To Do', '6'], ['DEV-595', 'Jan 09', 'Хазрет Байкулов', 'Medium', 'To Do', '5'], ['DEV-588', 'Jan 09', 'Александр Маслов, Хазрет Байкулов', 'Medium', 'To Do', '5'], ['DEV-408', 'Jan 09', 'Хазрет Байкулов', 'Critical', 'To Do', '4'], ['DEV-801', 'Jan 09', 'Хазрет Байкулов', 'Show-stopper', 'In Progress', '7'], ['SNDX-161', 'Jan 05', 'Екатерина Силина, Сергей Кораблин, Анна Барминцева, Алексей Смирнов, Элизабет Крец', 'Critical', 'In Progress', '5'], ['METH-132', 'Dec 29', 'Баина Корнякова', 'Medium', 'In Progress', '5'], ['METH-187', 'Dec 29', 'Баина Корнякова, Федор Сидоришин', 'Critical', 'Waiting', '6'], ['METH-138', 'Dec 29', 'Артур Сапрыкин', 'Medium', 'In Progress', '7'], ['METH-11', 'Dec 29', 'Артур Сапрыкин', 'Medium', 'In Progress', '7'], ['METH-202', 'Dec 29', 'Артур Сапрыкин', 'Medium', 'In Progress', '6'], ['METH-203', 'Dec 29', 'Федор Сидоришин', 'Medium', 'In Progress', '6'], ['METH-83', 'Dec 29', 'Федор Сидоришин', 'Medium', 'To Do', '4'], ['METH-16', 'Dec 29', 'Федор Сидоришин', 'Medium', 'Waiting', '4'], ['DEV-661', 'Dec 29', 'Александр Сенюк, Павел Ляхов', 'Minor', 'Deploy', '6'], ['DEV-535', 'Dec 29', 'Игорь Блинов, Александр Сенюк, Сергей Кораблин, Алмаз Хамидуллин', 'Medium', 'Code Review', '4'], ['DEV-764', 'Dec 29', 'Александр Сенюк, Павел Ляхов', 'Medium', 'To Do', '6'], ['DEV-799', 'Dec 29', 'Александр Маслов, Хазрет Байкулов, Сергей Биртанов', 'Medium', 'In Progress', '6'], ['DEV-798', 'Dec 29', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-797', 'Dec 29', 'Александр Маслов, Хазрет Байкулов, Сергей Биртанов', 'Medium', 'In Progress', '6'], ['DEV-790', 'Dec 29', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-788', 'Dec 29', 'Сергей Биртанов', 'Critical', 'Testing', '6'], ['DEV-796', 'Dec 29', 'Александр Маслов, Сергей Биртанов', 'Critical', 'To Do', '7'], ['DEV-677', 'Dec 29', 'Александр Маслов, Сергей Биртанов', 'Critical', 'In Progress', '5'], ['DEV-761', 'Dec 29', 'Сергей Биртанов', 'Medium', 'To Do', '7'], ['DEV-746', 'Dec 29', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['PRD-291', 'Dec 29', 'Василий Ганич, Сергей Кораблин, Алексей Сергеев, Алмаз Хамидуллин, Павел Ляхов, Александр Маклецов', 'Medium', 'In Progress', '6'], ['DEV-628', 'Dec 29', 'Ольга Мокина', 'Medium', 'To Do', '5'], ['PRD-203', 'Dec 29', 'Алексей Сергеев', 'Medium', 'To Do', '5'], ['PRD-241', 'Dec 29', 'Владислав Захаров, Алексей Сергеев', 'Low', 'To Do', '4'], ['PRD-109', 'Dec 29', 'Василий Ганич', 'Medium', 'Waiting', '4'], ['DEV-79', 'Dec 29', 'Хазрет Байкулов, Павел Ляхов', 'Minor', 'Deploy', '4'], ['DEV-599', 'Dec 29', 'Александр Маслов, Павел Ляхов', 'Critical', 'Testing', '5'], ['DEV-734', 'Dec 29', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-359', 'Dec 29', 'Хазрет Байкулов, Ольга Мокина, Александр Сенюк', 'Critical', 'In Progress', '4'], ['DEV-708', 'Dec 29', 'Александр Маслов, Сергей Биртанов', 'Critical', 'To Do', '6'], ['DEV-676', 'Dec 29', 'Павел Ляхов', 'Show-stopper', 'Waiting', '6'], ['PRD-321', 'Dec 29', 'Алексей Сергеев', 'Medium', 'To Do', '7'], ['DEV-494', 'Dec 29', 'Игорь Блинов, Павел Ляхов', 'Medium', 'Waiting', '4'], ['PRD-320', 'Dec 29', 'Ольга Мокина', 'Medium', 'To Do', '7'], ['DEV-662', 'Dec 29', 'Владислав Захаров', 'Medium', 'In Progress', '6'], ['DEV-509', 'Dec 29', 'Александр Маслов, Владислав Захаров', 'Medium', 'To Do', '4'], ['DEV-579', 'Dec 29', 'Владислав Захаров, Павел Ляхов', 'Medium', 'Testing', '5'], ['DEV-781', 'Dec 29', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-775', 'Dec 29', 'Владислав Захаров', 'Medium', 'To Do', '6'], ['DEV-789', 'Dec 29', 'Сергей Биртанов, Игорь Блинов', 'Medium', 'To Do', '6'], ['DEV-729', 'Dec 29', 'Хазрет Байкулов, Ольга Мокина, Баина Корнякова', 'Medium', 'To Do', '6'], ['PRD-319', 'Dec 29', 'Василий Ганич, Алексей Сергеев', 'Medium', 'To Do', '7'], ['DEV-716', 'Dec 29', 'Хазрет Байкулов, Ольга Мокина, Баина Корнякова', 'Medium', 'To Do', '6'], ['DEV-163', 'Dec 29', 'Александр Маслов, Сергей Биртанов', 'Medium', 'In Progress', '4'], ['DEV-719', 'Dec 29', 'Александр Маслов, Хазрет Байкулов, Ольга Мокина', 'Medium', 'In Progress', '6'], ['PRD-202', 'Dec 28', 'Александр Маслов, Владислав Захаров, Екатерина Силина', 'Minor', 'Testing', '7'], ['METH-189', 'Dec 28', 'Баина Корнякова', 'Medium', 'In Progress', '6'], ['DEV-402', 'Dec 28', 'Александр Маслов, Игорь Блинов', 'Show-stopper', 'Testing', '4'], ['DEV-394', 'Dec 28', 'Ольга Мокина, Игорь Блинов, Павел Ляхов', 'Critical', 'In Progress', '4'], ['DEV-786', 'Dec 28', 'Александр Сенюк', 'Medium', 'To Do', '6'], ['DEV-742', 'Dec 28', 'Александр Сенюк', 'Medium', 'Code Review', '7'], ['DEV-80', 'Dec 28', 'Ольга Мокина', 'Medium', 'In Progress', '4'], ['DEV-520', 'Dec 28', 'Сергей Кораблин', 'Medium', 'Testing', '5'], ['DEV-783', 'Dec 28', 'Хазрет Байкулов', 'Low', 'To Do', '6'], ['DEV-780', 'Dec 28', 'Хазрет Байкулов, Алексей Сергеев', 'Low', 'To Do', '7'], ['DEV-779', 'Dec 28', 'Хазрет Байкулов, Алексей Сергеев', 'Low', 'To Do', '7'], ['DEV-679', 'Dec 28', 'Владислав Захаров', 'Show-stopper', 'In Progress', '6'], ['DEV-678', 'Dec 28', 'Александр Маслов, Сергей Биртанов, Баина Корнякова', 'Show-stopper', 'Testing', '6'], ['PRD-249', 'Dec 28', 'Алмаз Хамидуллин', 'Medium', 'In Progress', '6'], ['DEV-538', 'Dec 28', 'Александр Маслов, Баина Корнякова', 'Low', 'To Do', '5'], ['DEV-724', 'Dec 28', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'In Progress', '6'], ['PRD-151', 'Dec 28', 'Александр Маслов, Владислав Захаров, Павел Ляхов', 'Medium', 'In Progress', '4'], ['DEV-575', 'Dec 28', 'Александр Маслов, Алексей Сергеев', 'Medium', 'In Progress', '4'], ['PRD-212', 'Dec 28', 'Алексей Сергеев', 'Critical', 'To Do', '6'], ['PRD-144', 'Dec 28', 'Павел Ляхов', 'Medium', 'Waiting', '4'], ['DEV-726', 'Dec 28', 'Александр Маслов', 'Medium', 'In Progress', '6'], ['DEV-728', 'Dec 28', 'Александр Маслов', 'Medium', 'In Progress', '6'], ['DEV-771', 'Dec 28', 'Сергей Биртанов', 'Critical', 'To Do', '6'], ['DEV-695', 'Dec 27', 'Владислав Захаров', 'Show-stopper', 'In Progress', '6'], ['SNDX-224', 'Dec 27', 'Василий Ганич, Светлана Обухова, Роман Зверев', 'Medium', 'In Progress', '7'], ['PRD-153', 'Dec 27', 'Алексей Сергеев', 'Medium', 'In Progress', '4'], ['DEV-309', 'Dec 27', 'Александр Маслов, Игорь Блинов', 'Critical', 'In Progress', '4'], ['DEV-433', 'Dec 27', 'Игорь Блинов, Александр Сенюк, Павел Ляхов', 'Critical', 'In Progress', '4'], ['DEV-765', 'Dec 27', 'Александр Сенюк', 'Low', 'To Do', '6'], ['DEV-736', 'Dec 27', 'Александр Маслов, Хазрет Байкулов', 'Critical', 'In Progress', '7'], ['DEV-586', 'Dec 27', 'Александр Маслов', 'Low', 'To Do', '5'], ['DEV-43', 'Dec 27', 'Хазрет Байкулов, Павел Ляхов', 'Low', 'In Progress', '4'], ['DEV-613', 'Dec 27', 'Хазрет Байкулов, Павел Ляхов', 'Show-stopper', 'Deploy', '5'], ['DEV-749', 'Dec 27', 'Хазрет Байкулов', 'Critical', 'Testing', '6'], ['DEV-412', 'Dec 26', 'Александр Маслов, Василий Ганич', 'Medium', 'To Do', '7'], ['DEV-267', 'Dec 26', 'Ольга Мокина, Василий Ганич, Екатерина Силина', 'Medium', 'Waiting', '4'], ['PRD-254', 'Dec 26', 'Василий Ганич, Екатерина Силина, Баина Корнякова', 'Medium', 'To Do', '7'], ['DEV-755', 'Dec 26', 'Александр Сенюк', 'Low', 'To Do', '7'], ['DEV-644', 'Dec 26', 'Ольга Мокина, Павел Ляхов', 'Medium', 'Deploy', '6'], ['DEV-752', 'Dec 26', 'Хазрет Байкулов, Ольга Мокина, Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-436', 'Dec 26', 'Ольга Мокина, Павел Ляхов', 'Medium', 'Deploy', '6'], ['DEV-640', 'Dec 26', 'Ольга Мокина, Павел Ляхов', 'Low', 'Deploy', '6'], ['DEV-180', 'Dec 26', 'Александр Маслов, Хазрет Байкулов, Павел Ляхов', 'Critical', 'In Progress', '4'], ['DEV-634', 'Dec 26', 'Александр Маслов', 'Critical', 'In Progress', '5'], ['DEV-641', 'Dec 26', 'Александр Маслов', 'Critical', 'To Do', '6'], ['DEV-639', 'Dec 26', 'Александр Маслов', 'Critical', 'To Do', '6'], ['DEV-745', 'Dec 26', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-739', 'Dec 26', 'Александр Сенюк', 'Low', 'To Do', '7'], ['DEV-744', 'Dec 26', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-743', 'Dec 26', 'Александр Сенюк, Алексей Сергеев', 'Minor', 'To Do', '7'], ['DEV-741', 'Dec 26', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-740', 'Dec 26', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-636', 'Dec 26', 'Александр Маслов', 'Critical', 'To Do', '6'], ['DEV-635', 'Dec 26', 'Александр Маслов', 'Critical', 'To Do', '6'], ['DEV-258', 'Dec 26', 'Ольга Мокина, Александр Сенюк, Павел Ляхов', 'Medium', 'To Do', '4'], ['DEV-735', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Low', 'To Do', '6'], ['DEV-733', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-730', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-721', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-717', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-711', 'Dec 25', 'Александр Сенюк', 'Medium', 'To Do', '6'], ['DEV-710', 'Dec 25', 'Александр Сенюк', 'Medium', 'To Do', '6'], ['DEV-702', 'Dec 25', 'Александр Маслов, Хазрет Байкулов', 'Low', 'In Progress', '6'], ['DEV-554', 'Dec 25', 'Александр Маслов, Хазрет Байкулов, Баина Корнякова', 'Medium', 'In Progress', '5'], ['DEV-697', 'Dec 25', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-694', 'Dec 24', 'Сергей Биртанов', 'Show-stopper', 'To Do', '6'], ['DEV-696', 'Dec 24', 'Сергей Биртанов', 'Show-stopper', 'To Do', '6'], ['DEV-688', 'Dec 24', 'Хазрет Байкулов', 'Show-stopper', 'In Progress', '6'], ['DEV-632', 'Dec 24', 'Александр Маслов, Хазрет Байкулов', 'Medium', 'In Progress', '5'], ['DEV-598', 'Dec 24', 'Хазрет Байкулов', 'Medium', 'In Progress', '5'], ['DEV-480', 'Dec 24', 'Александр Маслов, Хазрет Байкулов', 'Medium', 'Testing', '4'], ['DEV-566', 'Dec 24', 'Игорь Блинов', 'Medium', 'Testing', '5'], ['DEV-655', 'Dec 24', 'Хазрет Байкулов', 'Critical', 'Testing', '5'], ['DEV-691', 'Dec 24', 'Александр Маслов, Сергей Биртанов', 'Critical', 'To Do', '6'], ['PRD-243', 'Dec 24', 'Хазрет Байкулов', 'Medium', 'Code Review', '6'], ['DEV-633', 'Dec 24', 'Хазрет Байкулов', 'Show-stopper', 'Testing', '5'], ['DEV-563', 'Dec 24', 'Сергей Биртанов', 'Medium', 'Waiting', '5'], ['DEV-686', 'Dec 21', 'Александр Маслов, Александр Маклецов', 'Critical', 'To Do', '6'], ['METH-133', 'Dec 21', 'Екатерина Силина, Баина Корнякова', 'Medium', 'In Progress', '5'], ['DEV-637', 'Dec 21', 'Сергей Биртанов', 'Show-stopper', 'Testing', '5'], ['DEV-527', 'Dec 20', 'Владислав Захаров', 'Medium', 'In Progress', '5'], ['DEV-279', 'Dec 20', 'Ольга Мокина, Игорь Блинов', 'Critical', 'In Progress', '4'], ['DEV-226', 'Dec 20', 'Хазрет Байкулов', 'Medium', 'Testing', '4'], ['DEV-280', 'Dec 19', 'Александр Маслов, Игорь Блинов', 'Critical', 'In Progress', '4'], ['DEV-377', 'Dec 19', 'Сергей Биртанов', 'Medium', 'Code Review', '4'], ['METH-191', 'Dec 18', 'Екатерина Силина, Баина Корнякова', 'Medium', 'To Do', '6'], ['METH-190', 'Dec 18', 'Екатерина Силина, Баина Корнякова', 'Medium', 'To Do', '6'], ['PRD-22', 'Dec 18', 'Александр Маслов, Игорь Блинов, Сергей Кораблин, Павел Ляхов', 'Low', 'To Do', '4'], ['DEV-668', 'Dec 18', 'Александр Сенюк', 'Low', 'To Do', '6'], ['DEV-384', 'Dec 18', 'Владислав Захаров', 'Low', 'To Do', '4'], ['DEV-649', 'Dec 18', 'Хазрет Байкулов', 'Show-stopper', 'Testing', '5'], ['DEV-657', 'Dec 18', 'Хазрет Байкулов', 'Medium', 'Testing', '5'], ['DEV-656', 'Dec 17', 'Сергей Биртанов', 'Critical', 'Testing', '6'], ['DEV-669', 'Dec 17', 'Ольга Мокина', 'Low', 'To Do', '6'], ['DEV-553', 'Dec 17', 'Александр Маслов', 'Show-stopper', 'To Do', '5'], ['DEV-415', 'Dec 17', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-486', 'Dec 17', 'Ольга Мокина', 'Critical', 'To Do', '4'], ['DEV-597', 'Dec 17', 'Александр Маслов', 'Show-stopper', 'To Do', '5'], ['DEV-557', 'Dec 17', 'Александр Маслов', 'Medium', 'In Progress', '5'], ['DEV-454', 'Dec 17', 'Хазрет Байкулов', 'Medium', 'In Progress', '4'], ['DEV-166', 'Dec 17', 'Александр Маслов, Хазрет Байкулов', 'Medium', 'In Progress', '4'], ['DEV-525', 'Dec 17', 'Александр Маслов', 'Critical', 'To Do', '5'], ['DEV-465', 'Dec 17', 'Александр Маслов, Хазрет Байкулов, Игорь Блинов, Баина Корнякова', 'Critical', 'Testing', '4'], ['DEV-19', 'Dec 17', 'Александр Маслов, Сергей Биртанов', 'Medium', 'Waiting', '4'], ['METH-42', 'Dec 17', 'Баина Корнякова', 'Medium', 'In Progress', '4'], ['PRD-248', 'Dec 17', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['PRD-247', 'Dec 17', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-647', 'Dec 17', 'Александр Маслов', 'Critical', 'In Progress', '5'], ['PRD-244', 'Dec 17', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-658', 'Dec 17', 'Сергей Биртанов', 'Medium', 'To Do', '5'], ['PRD-54', 'Dec 17', 'Василий Ганич', 'Low', 'To Do', '4'], ['PRD-240', 'Dec 14', 'Павел Ляхов', 'Medium', 'Testing', '5'], ['DEV-348', 'Dec 14', 'Александр Маслов, Павел Ляхов', 'Critical', 'To Do', '3'], ['SNDX-198', 'Dec 14', 'Баина Корнякова', 'Medium', 'In Progress', '5'], ['DEV-347', 'Dec 13', 'Владислав Захаров, Павел Ляхов', 'Medium', 'In Progress', '4'], ['DEV-645', 'Dec 13', 'Владислав Захаров', 'Low', 'To Do', '6'], ['SNDX-197', 'Dec 13', 'Баина Корнякова', 'Medium', 'In Progress', '5'], ['DEV-643', 'Dec 13', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-638', 'Dec 13', 'Александр Маслов, Ольга Мокина', 'Critical', 'To Do', '6'], ['DEV-484', 'Dec 13', 'Хазрет Байкулов', 'Medium', 'In Progress', '4'], ['DEV-184', 'Dec 13', 'Сергей Биртанов', 'Medium', 'Testing', '4'], ['DEV-610', 'Dec 12', 'Ольга Мокина', 'Medium', 'To Do', '5'], ['DEV-213', 'Dec 12', 'Ольга Мокина', 'Medium', 'To Do', '4'], ['DEV-550', 'Dec 12', 'Хазрет Байкулов', 'Medium', 'Testing', '5'], ['DEV-582', 'Dec 12', 'Хазрет Байкулов, Игорь Блинов', 'Show-stopper', 'Testing', '5'], ['DEV-328', 'Dec 10', 'Игорь Блинов, Баина Корнякова', 'Medium', 'Testing', '4'], ['DEV-502', 'Dec 10', 'Игорь Блинов', 'Critical', 'Testing', '4'], ['DEV-477', 'Dec 10', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-585', 'Dec 10', 'Сергей Биртанов', 'Medium', 'To Do', '5'], ['DEV-498', 'Dec 10', 'Сергей Биртанов', 'Medium', 'Testing', '4'], ['DEV-583', 'Dec 10', 'Ольга Мокина', 'Medium', 'To Do', '5'], ['DEV-580', 'Dec 10', 'Ольга Мокина', 'Low', 'To Do', '6'], ['DEV-396', 'Dec 07', 'Владислав Захаров, Игорь Блинов', 'Medium', 'Testing', '4'], ['DEV-561', 'Dec 07', 'Игорь Блинов', 'Medium', 'Testing', '5'], ['DEV-567', 'Dec 07', 'Хазрет Байкулов, Игорь Блинов', 'Critical', 'Testing', '5'], ['PRD-204', 'Dec 06', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-227', 'Dec 06', 'Хазрет Байкулов', 'Medium', 'Testing', '4'], ['DEV-499', 'Dec 06', 'Хазрет Байкулов', 'Medium', 'Testing', '4'], ['DEV-552', 'Dec 06', 'Хазрет Байкулов', 'Show-stopper', 'Testing', '5'], ['DEV-556', 'Dec 06', 'Хазрет Байкулов', 'Show-stopper', 'Testing', '5'], ['DEV-548', 'Dec 06', 'Игорь Блинов', 'Critical', 'Testing', '5'], ['DEV-546', 'Dec 04', 'Александр Маслов', 'Medium', 'In Progress', '5'], ['DEV-207', 'Dec 04', 'Ольга Мокина', 'Medium', 'To Do', '4'], ['DEV-91', 'Dec 04', 'Ольга Мокина', 'Medium', 'To Do', '4'], ['DEV-512', 'Dec 04', 'Ольга Мокина', 'Low', 'To Do', '4'], ['DEV-545', 'Dec 04', 'Ольга Мокина', 'Medium', 'To Do', '5'], ['DEV-231', 'Dec 04', 'Владислав Захаров, Павел Ляхов', 'Medium', 'Waiting', '4'], ['DEV-142', 'Dec 04', 'Александр Маслов', 'Medium', 'Waiting', '4'], ['DEV-483', 'Dec 04', 'Александр Маслов', 'Medium', 'To Do', '4'], ['SNDX-156', 'Dec 04', 'Александр Маслов', 'Critical', 'To Do', '5'], ['DEV-74', 'Dec 04', 'Александр Маслов', 'Medium', 'In Progress', '4'], ['DEV-254', 'Dec 04', 'Павел Поляков', 'Medium', 'Waiting', '4'], ['PRD-85', 'Dec 03', 'Алексей Сергеев', 'Medium', 'In Progress', '4'], ['DEV-251', 'Dec 03', 'Хазрет Байкулов', 'Low', 'To Do', '4'], ['DEV-513', 'Dec 03', 'Александр Маслов, Ольга Мокина', 'Medium', 'To Do', '4'], ['DEV-516', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['PRD-60', 'Dec 03', 'Александр Маслов, Василий Ганич, Алексей Сергеев', 'Low', 'To Do', '4'], ['DEV-104', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['PRD-18', 'Dec 03', 'Ольга Мокина, Павел Ляхов', 'Medium', 'Waiting', '4'], ['DEV-248', 'Dec 03', 'Александр Маслов, Баина Корнякова', 'Critical', 'Testing', '4'], ['DEV-376', 'Dec 03', 'Хазрет Байкулов, Александр Сенюк, Павел Ляхов', 'Medium', 'To Do', '4'], ['DEV-154', 'Dec 03', 'Александр Маслов', 'Medium', 'Waiting', '4'], ['DEV-148', 'Dec 03', 'Александр Маслов', 'Minor', 'To Do', '4'], ['DEV-293', 'Dec 03', 'Ольга Мокина, Игорь Блинов', 'Critical', 'To Do', '4'], ['DEV-130', 'Dec 03', 'Хазрет Байкулов', 'Low', 'To Do', '4'], ['DEV-472', 'Dec 03', 'Александр Сенюк', 'Medium', 'To Do', '4'], ['DEV-294', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-455', 'Dec 03', 'Игорь Блинов', 'Show-stopper', 'Testing', '4'], ['DEV-367', 'Dec 03', 'Александр Сенюк', 'Medium', 'In Progress', '4'], ['DEV-221', 'Dec 03', 'Ольга Мокина, Баина Корнякова', 'Medium', 'Waiting', '4'], ['DEV-18', 'Dec 03', 'Александр Маслов, Павел Ляхов', 'Critical', 'In Progress', '4'], ['DEV-3', 'Dec 03', 'Игорь Блинов, Баина Корнякова', 'Medium', 'Testing', '4'], ['DEV-429', 'Dec 03', 'Александр Маслов, Баина Корнякова', 'Critical', 'Testing', '4'], ['DEV-378', 'Dec 03', 'Владислав Захаров', 'Low', 'To Do', '4'], ['PRD-57', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['IT-14', 'Dec 03', 'Александр Маслов', 'Critical', 'In Progress', '4'], ['DEV-153', 'Dec 03', 'Александр Маслов', 'Critical', 'To Do', '4'], ['DEV-151', 'Dec 03', 'Александр Маслов', 'Minor', 'To Do', '4'], ['DEV-20', 'Dec 03', 'Хазрет Байкулов', 'Minor', 'To Do', '4'], ['DEV-174', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-169', 'Dec 03', 'Александр Маслов', 'Low', 'To Do', '4'], ['DEV-10', 'Dec 03', 'Хазрет Байкулов, Игорь Блинов', 'Low', 'To Do', '4'], ['DEV-189', 'Dec 03', 'Александр Маслов', 'Critical', 'In Progress', '4'], ['DEV-176', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-238', 'Dec 03', 'Хазрет Байкулов, Павел Ляхов', 'Medium', 'To Do', '4'], ['DEV-381', 'Dec 03', 'Ольга Мокина', 'Low', 'To Do', '4'], ['DEV-389', 'Dec 03', 'Александр Маслов', 'Medium', 'Testing', '4'], ['PRD-58', 'Nov 04', 'Александр Маслов', 'Medium', 'To Do', '3'], ['SNDX-47', 'Nov 01', 'Александр Маслов', 'Low', 'To Do', '3']];\n\nvar columnDataTypes2 =   [ 'string',    'numeric',          'string',   'sting',            'string',       'link',             'numeric',  'string',   'serial'];\nvar columnClasses2 =     [ 'long',      'short',            'long',     'long',             'long',         'long',             'short',    'long',     'short'];\nvar headers2 =           [ 'order_id',  'index_in_parcel',  'store',    'tracking_number',  'part_number',  'supplier_link',    'qty',      'status',   'idx'];\nvar data2 = [];//[['DEV-778', 'Jan 09', 'Александр Маслов, Сергей Биртанов', 'Low', 'In Progress', '7'], ['METH-230', 'Jan 09', 'Артур Сапрыкин', 'Medium', 'In Progress', '7'], ['PRD-327', 'Jan 09', 'Александр Маслов, Василий Ганич, Баина Корнякова, Роман Зверев', 'Medium', 'In Progress', '6'], ['DEV-722', 'Jan 09', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-642', 'Jan 09', 'Александр Сенюк', 'Medium', 'To Do', '6'], ['DEV-595', 'Jan 09', 'Хазрет Байкулов', 'Medium', 'To Do', '5'], ['DEV-588', 'Jan 09', 'Александр Маслов, Хазрет Байкулов', 'Medium', 'To Do', '5'], ['DEV-408', 'Jan 09', 'Хазрет Байкулов', 'Critical', 'To Do', '4'], ['DEV-801', 'Jan 09', 'Хазрет Байкулов', 'Show-stopper', 'In Progress', '7'], ['SNDX-161', 'Jan 05', 'Екатерина Силина, Сергей Кораблин, Анна Барминцева, Алексей Смирнов, Элизабет Крец', 'Critical', 'In Progress', '5'], ['METH-132', 'Dec 29', 'Баина Корнякова', 'Medium', 'In Progress', '5'], ['METH-187', 'Dec 29', 'Баина Корнякова, Федор Сидоришин', 'Critical', 'Waiting', '6'], ['METH-138', 'Dec 29', 'Артур Сапрыкин', 'Medium', 'In Progress', '7'], ['METH-11', 'Dec 29', 'Артур Сапрыкин', 'Medium', 'In Progress', '7'], ['METH-202', 'Dec 29', 'Артур Сапрыкин', 'Medium', 'In Progress', '6'], ['METH-203', 'Dec 29', 'Федор Сидоришин', 'Medium', 'In Progress', '6'], ['METH-83', 'Dec 29', 'Федор Сидоришин', 'Medium', 'To Do', '4'], ['METH-16', 'Dec 29', 'Федор Сидоришин', 'Medium', 'Waiting', '4'], ['DEV-661', 'Dec 29', 'Александр Сенюк, Павел Ляхов', 'Minor', 'Deploy', '6'], ['DEV-535', 'Dec 29', 'Игорь Блинов, Александр Сенюк, Сергей Кораблин, Алмаз Хамидуллин', 'Medium', 'Code Review', '4'], ['DEV-764', 'Dec 29', 'Александр Сенюк, Павел Ляхов', 'Medium', 'To Do', '6'], ['DEV-799', 'Dec 29', 'Александр Маслов, Хазрет Байкулов, Сергей Биртанов', 'Medium', 'In Progress', '6'], ['DEV-798', 'Dec 29', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-797', 'Dec 29', 'Александр Маслов, Хазрет Байкулов, Сергей Биртанов', 'Medium', 'In Progress', '6'], ['DEV-790', 'Dec 29', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-788', 'Dec 29', 'Сергей Биртанов', 'Critical', 'Testing', '6'], ['DEV-796', 'Dec 29', 'Александр Маслов, Сергей Биртанов', 'Critical', 'To Do', '7'], ['DEV-677', 'Dec 29', 'Александр Маслов, Сергей Биртанов', 'Critical', 'In Progress', '5'], ['DEV-761', 'Dec 29', 'Сергей Биртанов', 'Medium', 'To Do', '7'], ['DEV-746', 'Dec 29', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['PRD-291', 'Dec 29', 'Василий Ганич, Сергей Кораблин, Алексей Сергеев, Алмаз Хамидуллин, Павел Ляхов, Александр Маклецов', 'Medium', 'In Progress', '6'], ['DEV-628', 'Dec 29', 'Ольга Мокина', 'Medium', 'To Do', '5'], ['PRD-203', 'Dec 29', 'Алексей Сергеев', 'Medium', 'To Do', '5'], ['PRD-241', 'Dec 29', 'Владислав Захаров, Алексей Сергеев', 'Low', 'To Do', '4'], ['PRD-109', 'Dec 29', 'Василий Ганич', 'Medium', 'Waiting', '4'], ['DEV-79', 'Dec 29', 'Хазрет Байкулов, Павел Ляхов', 'Minor', 'Deploy', '4'], ['DEV-599', 'Dec 29', 'Александр Маслов, Павел Ляхов', 'Critical', 'Testing', '5'], ['DEV-734', 'Dec 29', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-359', 'Dec 29', 'Хазрет Байкулов, Ольга Мокина, Александр Сенюк', 'Critical', 'In Progress', '4'], ['DEV-708', 'Dec 29', 'Александр Маслов, Сергей Биртанов', 'Critical', 'To Do', '6'], ['DEV-676', 'Dec 29', 'Павел Ляхов', 'Show-stopper', 'Waiting', '6'], ['PRD-321', 'Dec 29', 'Алексей Сергеев', 'Medium', 'To Do', '7'], ['DEV-494', 'Dec 29', 'Игорь Блинов, Павел Ляхов', 'Medium', 'Waiting', '4'], ['PRD-320', 'Dec 29', 'Ольга Мокина', 'Medium', 'To Do', '7'], ['DEV-662', 'Dec 29', 'Владислав Захаров', 'Medium', 'In Progress', '6'], ['DEV-509', 'Dec 29', 'Александр Маслов, Владислав Захаров', 'Medium', 'To Do', '4'], ['DEV-579', 'Dec 29', 'Владислав Захаров, Павел Ляхов', 'Medium', 'Testing', '5'], ['DEV-781', 'Dec 29', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-775', 'Dec 29', 'Владислав Захаров', 'Medium', 'To Do', '6'], ['DEV-789', 'Dec 29', 'Сергей Биртанов, Игорь Блинов', 'Medium', 'To Do', '6'], ['DEV-729', 'Dec 29', 'Хазрет Байкулов, Ольга Мокина, Баина Корнякова', 'Medium', 'To Do', '6'], ['PRD-319', 'Dec 29', 'Василий Ганич, Алексей Сергеев', 'Medium', 'To Do', '7'], ['DEV-716', 'Dec 29', 'Хазрет Байкулов, Ольга Мокина, Баина Корнякова', 'Medium', 'To Do', '6'], ['DEV-163', 'Dec 29', 'Александр Маслов, Сергей Биртанов', 'Medium', 'In Progress', '4'], ['DEV-719', 'Dec 29', 'Александр Маслов, Хазрет Байкулов, Ольга Мокина', 'Medium', 'In Progress', '6'], ['PRD-202', 'Dec 28', 'Александр Маслов, Владислав Захаров, Екатерина Силина', 'Minor', 'Testing', '7'], ['METH-189', 'Dec 28', 'Баина Корнякова', 'Medium', 'In Progress', '6'], ['DEV-402', 'Dec 28', 'Александр Маслов, Игорь Блинов', 'Show-stopper', 'Testing', '4'], ['DEV-394', 'Dec 28', 'Ольга Мокина, Игорь Блинов, Павел Ляхов', 'Critical', 'In Progress', '4'], ['DEV-786', 'Dec 28', 'Александр Сенюк', 'Medium', 'To Do', '6'], ['DEV-742', 'Dec 28', 'Александр Сенюк', 'Medium', 'Code Review', '7'], ['DEV-80', 'Dec 28', 'Ольга Мокина', 'Medium', 'In Progress', '4'], ['DEV-520', 'Dec 28', 'Сергей Кораблин', 'Medium', 'Testing', '5'], ['DEV-783', 'Dec 28', 'Хазрет Байкулов', 'Low', 'To Do', '6'], ['DEV-780', 'Dec 28', 'Хазрет Байкулов, Алексей Сергеев', 'Low', 'To Do', '7'], ['DEV-779', 'Dec 28', 'Хазрет Байкулов, Алексей Сергеев', 'Low', 'To Do', '7'], ['DEV-679', 'Dec 28', 'Владислав Захаров', 'Show-stopper', 'In Progress', '6'], ['DEV-678', 'Dec 28', 'Александр Маслов, Сергей Биртанов, Баина Корнякова', 'Show-stopper', 'Testing', '6'], ['PRD-249', 'Dec 28', 'Алмаз Хамидуллин', 'Medium', 'In Progress', '6'], ['DEV-538', 'Dec 28', 'Александр Маслов, Баина Корнякова', 'Low', 'To Do', '5'], ['DEV-724', 'Dec 28', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'In Progress', '6'], ['PRD-151', 'Dec 28', 'Александр Маслов, Владислав Захаров, Павел Ляхов', 'Medium', 'In Progress', '4'], ['DEV-575', 'Dec 28', 'Александр Маслов, Алексей Сергеев', 'Medium', 'In Progress', '4'], ['PRD-212', 'Dec 28', 'Алексей Сергеев', 'Critical', 'To Do', '6'], ['PRD-144', 'Dec 28', 'Павел Ляхов', 'Medium', 'Waiting', '4'], ['DEV-726', 'Dec 28', 'Александр Маслов', 'Medium', 'In Progress', '6'], ['DEV-728', 'Dec 28', 'Александр Маслов', 'Medium', 'In Progress', '6'], ['DEV-771', 'Dec 28', 'Сергей Биртанов', 'Critical', 'To Do', '6'], ['DEV-695', 'Dec 27', 'Владислав Захаров', 'Show-stopper', 'In Progress', '6'], ['SNDX-224', 'Dec 27', 'Василий Ганич, Светлана Обухова, Роман Зверев', 'Medium', 'In Progress', '7'], ['PRD-153', 'Dec 27', 'Алексей Сергеев', 'Medium', 'In Progress', '4'], ['DEV-309', 'Dec 27', 'Александр Маслов, Игорь Блинов', 'Critical', 'In Progress', '4'], ['DEV-433', 'Dec 27', 'Игорь Блинов, Александр Сенюк, Павел Ляхов', 'Critical', 'In Progress', '4'], ['DEV-765', 'Dec 27', 'Александр Сенюк', 'Low', 'To Do', '6'], ['DEV-736', 'Dec 27', 'Александр Маслов, Хазрет Байкулов', 'Critical', 'In Progress', '7'], ['DEV-586', 'Dec 27', 'Александр Маслов', 'Low', 'To Do', '5'], ['DEV-43', 'Dec 27', 'Хазрет Байкулов, Павел Ляхов', 'Low', 'In Progress', '4'], ['DEV-613', 'Dec 27', 'Хазрет Байкулов, Павел Ляхов', 'Show-stopper', 'Deploy', '5'], ['DEV-749', 'Dec 27', 'Хазрет Байкулов', 'Critical', 'Testing', '6'], ['DEV-412', 'Dec 26', 'Александр Маслов, Василий Ганич', 'Medium', 'To Do', '7'], ['DEV-267', 'Dec 26', 'Ольга Мокина, Василий Ганич, Екатерина Силина', 'Medium', 'Waiting', '4'], ['PRD-254', 'Dec 26', 'Василий Ганич, Екатерина Силина, Баина Корнякова', 'Medium', 'To Do', '7'], ['DEV-755', 'Dec 26', 'Александр Сенюк', 'Low', 'To Do', '7'], ['DEV-644', 'Dec 26', 'Ольга Мокина, Павел Ляхов', 'Medium', 'Deploy', '6'], ['DEV-752', 'Dec 26', 'Хазрет Байкулов, Ольга Мокина, Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-436', 'Dec 26', 'Ольга Мокина, Павел Ляхов', 'Medium', 'Deploy', '6'], ['DEV-640', 'Dec 26', 'Ольга Мокина, Павел Ляхов', 'Low', 'Deploy', '6'], ['DEV-180', 'Dec 26', 'Александр Маслов, Хазрет Байкулов, Павел Ляхов', 'Critical', 'In Progress', '4'], ['DEV-634', 'Dec 26', 'Александр Маслов', 'Critical', 'In Progress', '5'], ['DEV-641', 'Dec 26', 'Александр Маслов', 'Critical', 'To Do', '6'], ['DEV-639', 'Dec 26', 'Александр Маслов', 'Critical', 'To Do', '6'], ['DEV-745', 'Dec 26', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-739', 'Dec 26', 'Александр Сенюк', 'Low', 'To Do', '7'], ['DEV-744', 'Dec 26', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-743', 'Dec 26', 'Александр Сенюк, Алексей Сергеев', 'Minor', 'To Do', '7'], ['DEV-741', 'Dec 26', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-740', 'Dec 26', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-636', 'Dec 26', 'Александр Маслов', 'Critical', 'To Do', '6'], ['DEV-635', 'Dec 26', 'Александр Маслов', 'Critical', 'To Do', '6'], ['DEV-258', 'Dec 26', 'Ольга Мокина, Александр Сенюк, Павел Ляхов', 'Medium', 'To Do', '4'], ['DEV-735', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Low', 'To Do', '6'], ['DEV-733', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-730', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-721', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-717', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-711', 'Dec 25', 'Александр Сенюк', 'Medium', 'To Do', '6'], ['DEV-710', 'Dec 25', 'Александр Сенюк', 'Medium', 'To Do', '6'], ['DEV-702', 'Dec 25', 'Александр Маслов, Хазрет Байкулов', 'Low', 'In Progress', '6'], ['DEV-554', 'Dec 25', 'Александр Маслов, Хазрет Байкулов, Баина Корнякова', 'Medium', 'In Progress', '5'], ['DEV-697', 'Dec 25', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-694', 'Dec 24', 'Сергей Биртанов', 'Show-stopper', 'To Do', '6'], ['DEV-696', 'Dec 24', 'Сергей Биртанов', 'Show-stopper', 'To Do', '6'], ['DEV-688', 'Dec 24', 'Хазрет Байкулов', 'Show-stopper', 'In Progress', '6'], ['DEV-632', 'Dec 24', 'Александр Маслов, Хазрет Байкулов', 'Medium', 'In Progress', '5'], ['DEV-598', 'Dec 24', 'Хазрет Байкулов', 'Medium', 'In Progress', '5'], ['DEV-480', 'Dec 24', 'Александр Маслов, Хазрет Байкулов', 'Medium', 'Testing', '4'], ['DEV-566', 'Dec 24', 'Игорь Блинов', 'Medium', 'Testing', '5'], ['DEV-655', 'Dec 24', 'Хазрет Байкулов', 'Critical', 'Testing', '5'], ['DEV-691', 'Dec 24', 'Александр Маслов, Сергей Биртанов', 'Critical', 'To Do', '6'], ['PRD-243', 'Dec 24', 'Хазрет Байкулов', 'Medium', 'Code Review', '6'], ['DEV-633', 'Dec 24', 'Хазрет Байкулов', 'Show-stopper', 'Testing', '5'], ['DEV-563', 'Dec 24', 'Сергей Биртанов', 'Medium', 'Waiting', '5'], ['DEV-686', 'Dec 21', 'Александр Маслов, Александр Маклецов', 'Critical', 'To Do', '6'], ['METH-133', 'Dec 21', 'Екатерина Силина, Баина Корнякова', 'Medium', 'In Progress', '5'], ['DEV-637', 'Dec 21', 'Сергей Биртанов', 'Show-stopper', 'Testing', '5'], ['DEV-527', 'Dec 20', 'Владислав Захаров', 'Medium', 'In Progress', '5'], ['DEV-279', 'Dec 20', 'Ольга Мокина, Игорь Блинов', 'Critical', 'In Progress', '4'], ['DEV-226', 'Dec 20', 'Хазрет Байкулов', 'Medium', 'Testing', '4'], ['DEV-280', 'Dec 19', 'Александр Маслов, Игорь Блинов', 'Critical', 'In Progress', '4'], ['DEV-377', 'Dec 19', 'Сергей Биртанов', 'Medium', 'Code Review', '4'], ['METH-191', 'Dec 18', 'Екатерина Силина, Баина Корнякова', 'Medium', 'To Do', '6'], ['METH-190', 'Dec 18', 'Екатерина Силина, Баина Корнякова', 'Medium', 'To Do', '6'], ['PRD-22', 'Dec 18', 'Александр Маслов, Игорь Блинов, Сергей Кораблин, Павел Ляхов', 'Low', 'To Do', '4'], ['DEV-668', 'Dec 18', 'Александр Сенюк', 'Low', 'To Do', '6'], ['DEV-384', 'Dec 18', 'Владислав Захаров', 'Low', 'To Do', '4'], ['DEV-649', 'Dec 18', 'Хазрет Байкулов', 'Show-stopper', 'Testing', '5'], ['DEV-657', 'Dec 18', 'Хазрет Байкулов', 'Medium', 'Testing', '5'], ['DEV-656', 'Dec 17', 'Сергей Биртанов', 'Critical', 'Testing', '6'], ['DEV-669', 'Dec 17', 'Ольга Мокина', 'Low', 'To Do', '6'], ['DEV-553', 'Dec 17', 'Александр Маслов', 'Show-stopper', 'To Do', '5'], ['DEV-415', 'Dec 17', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-486', 'Dec 17', 'Ольга Мокина', 'Critical', 'To Do', '4'], ['DEV-597', 'Dec 17', 'Александр Маслов', 'Show-stopper', 'To Do', '5'], ['DEV-557', 'Dec 17', 'Александр Маслов', 'Medium', 'In Progress', '5'], ['DEV-454', 'Dec 17', 'Хазрет Байкулов', 'Medium', 'In Progress', '4'], ['DEV-166', 'Dec 17', 'Александр Маслов, Хазрет Байкулов', 'Medium', 'In Progress', '4'], ['DEV-525', 'Dec 17', 'Александр Маслов', 'Critical', 'To Do', '5'], ['DEV-465', 'Dec 17', 'Александр Маслов, Хазрет Байкулов, Игорь Блинов, Баина Корнякова', 'Critical', 'Testing', '4'], ['DEV-19', 'Dec 17', 'Александр Маслов, Сергей Биртанов', 'Medium', 'Waiting', '4'], ['METH-42', 'Dec 17', 'Баина Корнякова', 'Medium', 'In Progress', '4'], ['PRD-248', 'Dec 17', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['PRD-247', 'Dec 17', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-647', 'Dec 17', 'Александр Маслов', 'Critical', 'In Progress', '5'], ['PRD-244', 'Dec 17', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-658', 'Dec 17', 'Сергей Биртанов', 'Medium', 'To Do', '5'], ['PRD-54', 'Dec 17', 'Василий Ганич', 'Low', 'To Do', '4'], ['PRD-240', 'Dec 14', 'Павел Ляхов', 'Medium', 'Testing', '5'], ['DEV-348', 'Dec 14', 'Александр Маслов, Павел Ляхов', 'Critical', 'To Do', '3'], ['SNDX-198', 'Dec 14', 'Баина Корнякова', 'Medium', 'In Progress', '5'], ['DEV-347', 'Dec 13', 'Владислав Захаров, Павел Ляхов', 'Medium', 'In Progress', '4'], ['DEV-645', 'Dec 13', 'Владислав Захаров', 'Low', 'To Do', '6'], ['SNDX-197', 'Dec 13', 'Баина Корнякова', 'Medium', 'In Progress', '5'], ['DEV-643', 'Dec 13', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-638', 'Dec 13', 'Александр Маслов, Ольга Мокина', 'Critical', 'To Do', '6'], ['DEV-484', 'Dec 13', 'Хазрет Байкулов', 'Medium', 'In Progress', '4'], ['DEV-184', 'Dec 13', 'Сергей Биртанов', 'Medium', 'Testing', '4'], ['DEV-610', 'Dec 12', 'Ольга Мокина', 'Medium', 'To Do', '5'], ['DEV-213', 'Dec 12', 'Ольга Мокина', 'Medium', 'To Do', '4'], ['DEV-550', 'Dec 12', 'Хазрет Байкулов', 'Medium', 'Testing', '5'], ['DEV-582', 'Dec 12', 'Хазрет Байкулов, Игорь Блинов', 'Show-stopper', 'Testing', '5'], ['DEV-328', 'Dec 10', 'Игорь Блинов, Баина Корнякова', 'Medium', 'Testing', '4'], ['DEV-502', 'Dec 10', 'Игорь Блинов', 'Critical', 'Testing', '4'], ['DEV-477', 'Dec 10', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-585', 'Dec 10', 'Сергей Биртанов', 'Medium', 'To Do', '5'], ['DEV-498', 'Dec 10', 'Сергей Биртанов', 'Medium', 'Testing', '4'], ['DEV-583', 'Dec 10', 'Ольга Мокина', 'Medium', 'To Do', '5'], ['DEV-580', 'Dec 10', 'Ольга Мокина', 'Low', 'To Do', '6'], ['DEV-396', 'Dec 07', 'Владислав Захаров, Игорь Блинов', 'Medium', 'Testing', '4'], ['DEV-561', 'Dec 07', 'Игорь Блинов', 'Medium', 'Testing', '5'], ['DEV-567', 'Dec 07', 'Хазрет Байкулов, Игорь Блинов', 'Critical', 'Testing', '5'], ['PRD-204', 'Dec 06', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-227', 'Dec 06', 'Хазрет Байкулов', 'Medium', 'Testing', '4'], ['DEV-499', 'Dec 06', 'Хазрет Байкулов', 'Medium', 'Testing', '4'], ['DEV-552', 'Dec 06', 'Хазрет Байкулов', 'Show-stopper', 'Testing', '5'], ['DEV-556', 'Dec 06', 'Хазрет Байкулов', 'Show-stopper', 'Testing', '5'], ['DEV-548', 'Dec 06', 'Игорь Блинов', 'Critical', 'Testing', '5'], ['DEV-546', 'Dec 04', 'Александр Маслов', 'Medium', 'In Progress', '5'], ['DEV-207', 'Dec 04', 'Ольга Мокина', 'Medium', 'To Do', '4'], ['DEV-91', 'Dec 04', 'Ольга Мокина', 'Medium', 'To Do', '4'], ['DEV-512', 'Dec 04', 'Ольга Мокина', 'Low', 'To Do', '4'], ['DEV-545', 'Dec 04', 'Ольга Мокина', 'Medium', 'To Do', '5'], ['DEV-231', 'Dec 04', 'Владислав Захаров, Павел Ляхов', 'Medium', 'Waiting', '4'], ['DEV-142', 'Dec 04', 'Александр Маслов', 'Medium', 'Waiting', '4'], ['DEV-483', 'Dec 04', 'Александр Маслов', 'Medium', 'To Do', '4'], ['SNDX-156', 'Dec 04', 'Александр Маслов', 'Critical', 'To Do', '5'], ['DEV-74', 'Dec 04', 'Александр Маслов', 'Medium', 'In Progress', '4'], ['DEV-254', 'Dec 04', 'Павел Поляков', 'Medium', 'Waiting', '4'], ['PRD-85', 'Dec 03', 'Алексей Сергеев', 'Medium', 'In Progress', '4'], ['DEV-251', 'Dec 03', 'Хазрет Байкулов', 'Low', 'To Do', '4'], ['DEV-513', 'Dec 03', 'Александр Маслов, Ольга Мокина', 'Medium', 'To Do', '4'], ['DEV-516', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['PRD-60', 'Dec 03', 'Александр Маслов, Василий Ганич, Алексей Сергеев', 'Low', 'To Do', '4'], ['DEV-104', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['PRD-18', 'Dec 03', 'Ольга Мокина, Павел Ляхов', 'Medium', 'Waiting', '4'], ['DEV-248', 'Dec 03', 'Александр Маслов, Баина Корнякова', 'Critical', 'Testing', '4'], ['DEV-376', 'Dec 03', 'Хазрет Байкулов, Александр Сенюк, Павел Ляхов', 'Medium', 'To Do', '4'], ['DEV-154', 'Dec 03', 'Александр Маслов', 'Medium', 'Waiting', '4'], ['DEV-148', 'Dec 03', 'Александр Маслов', 'Minor', 'To Do', '4'], ['DEV-293', 'Dec 03', 'Ольга Мокина, Игорь Блинов', 'Critical', 'To Do', '4'], ['DEV-130', 'Dec 03', 'Хазрет Байкулов', 'Low', 'To Do', '4'], ['DEV-472', 'Dec 03', 'Александр Сенюк', 'Medium', 'To Do', '4'], ['DEV-294', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-455', 'Dec 03', 'Игорь Блинов', 'Show-stopper', 'Testing', '4'], ['DEV-367', 'Dec 03', 'Александр Сенюк', 'Medium', 'In Progress', '4'], ['DEV-221', 'Dec 03', 'Ольга Мокина, Баина Корнякова', 'Medium', 'Waiting', '4'], ['DEV-18', 'Dec 03', 'Александр Маслов, Павел Ляхов', 'Critical', 'In Progress', '4'], ['DEV-3', 'Dec 03', 'Игорь Блинов, Баина Корнякова', 'Medium', 'Testing', '4'], ['DEV-429', 'Dec 03', 'Александр Маслов, Баина Корнякова', 'Critical', 'Testing', '4'], ['DEV-378', 'Dec 03', 'Владислав Захаров', 'Low', 'To Do', '4'], ['PRD-57', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['IT-14', 'Dec 03', 'Александр Маслов', 'Critical', 'In Progress', '4'], ['DEV-153', 'Dec 03', 'Александр Маслов', 'Critical', 'To Do', '4'], ['DEV-151', 'Dec 03', 'Александр Маслов', 'Minor', 'To Do', '4'], ['DEV-20', 'Dec 03', 'Хазрет Байкулов', 'Minor', 'To Do', '4'], ['DEV-174', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-169', 'Dec 03', 'Александр Маслов', 'Low', 'To Do', '4'], ['DEV-10', 'Dec 03', 'Хазрет Байкулов, Игорь Блинов', 'Low', 'To Do', '4'], ['DEV-189', 'Dec 03', 'Александр Маслов', 'Critical', 'In Progress', '4'], ['DEV-176', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-238', 'Dec 03', 'Хазрет Байкулов, Павел Ляхов', 'Medium', 'To Do', '4'], ['DEV-381', 'Dec 03', 'Ольга Мокина', 'Low', 'To Do', '4'], ['DEV-389', 'Dec 03', 'Александр Маслов', 'Medium', 'Testing', '4'], ['PRD-58', 'Nov 04', 'Александр Маслов', 'Medium', 'To Do', '3'], ['SNDX-47', 'Nov 01', 'Александр Маслов', 'Low', 'To Do', '3']];\n\nvar columnDataTypes3 =   [ 'string',        'string',       'numeric',      'numeric',          'numeric',      'string',       'numeric',          'serial'];\nvar columnClasses3 =     [ 'long',          'long',         'short',        'mid',              'mid',          'mid',          'mid',              'short'];\nvar headers3 =           [ 'part_number',   'description',  'perDevice',    'instock',          'solderable',   'soldercell',   'soldersequence',   'idx'];\nvar data3 = [];//[['DEV-778', 'Jan 09', 'Александр Маслов, Сергей Биртанов', 'Low', 'In Progress', '7'], ['METH-230', 'Jan 09', 'Артур Сапрыкин', 'Medium', 'In Progress', '7'], ['PRD-327', 'Jan 09', 'Александр Маслов, Василий Ганич, Баина Корнякова, Роман Зверев', 'Medium', 'In Progress', '6'], ['DEV-722', 'Jan 09', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-642', 'Jan 09', 'Александр Сенюк', 'Medium', 'To Do', '6'], ['DEV-595', 'Jan 09', 'Хазрет Байкулов', 'Medium', 'To Do', '5'], ['DEV-588', 'Jan 09', 'Александр Маслов, Хазрет Байкулов', 'Medium', 'To Do', '5'], ['DEV-408', 'Jan 09', 'Хазрет Байкулов', 'Critical', 'To Do', '4'], ['DEV-801', 'Jan 09', 'Хазрет Байкулов', 'Show-stopper', 'In Progress', '7'], ['SNDX-161', 'Jan 05', 'Екатерина Силина, Сергей Кораблин, Анна Барминцева, Алексей Смирнов, Элизабет Крец', 'Critical', 'In Progress', '5'], ['METH-132', 'Dec 29', 'Баина Корнякова', 'Medium', 'In Progress', '5'], ['METH-187', 'Dec 29', 'Баина Корнякова, Федор Сидоришин', 'Critical', 'Waiting', '6'], ['METH-138', 'Dec 29', 'Артур Сапрыкин', 'Medium', 'In Progress', '7'], ['METH-11', 'Dec 29', 'Артур Сапрыкин', 'Medium', 'In Progress', '7'], ['METH-202', 'Dec 29', 'Артур Сапрыкин', 'Medium', 'In Progress', '6'], ['METH-203', 'Dec 29', 'Федор Сидоришин', 'Medium', 'In Progress', '6'], ['METH-83', 'Dec 29', 'Федор Сидоришин', 'Medium', 'To Do', '4'], ['METH-16', 'Dec 29', 'Федор Сидоришин', 'Medium', 'Waiting', '4'], ['DEV-661', 'Dec 29', 'Александр Сенюк, Павел Ляхов', 'Minor', 'Deploy', '6'], ['DEV-535', 'Dec 29', 'Игорь Блинов, Александр Сенюк, Сергей Кораблин, Алмаз Хамидуллин', 'Medium', 'Code Review', '4'], ['DEV-764', 'Dec 29', 'Александр Сенюк, Павел Ляхов', 'Medium', 'To Do', '6'], ['DEV-799', 'Dec 29', 'Александр Маслов, Хазрет Байкулов, Сергей Биртанов', 'Medium', 'In Progress', '6'], ['DEV-798', 'Dec 29', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-797', 'Dec 29', 'Александр Маслов, Хазрет Байкулов, Сергей Биртанов', 'Medium', 'In Progress', '6'], ['DEV-790', 'Dec 29', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-788', 'Dec 29', 'Сергей Биртанов', 'Critical', 'Testing', '6'], ['DEV-796', 'Dec 29', 'Александр Маслов, Сергей Биртанов', 'Critical', 'To Do', '7'], ['DEV-677', 'Dec 29', 'Александр Маслов, Сергей Биртанов', 'Critical', 'In Progress', '5'], ['DEV-761', 'Dec 29', 'Сергей Биртанов', 'Medium', 'To Do', '7'], ['DEV-746', 'Dec 29', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['PRD-291', 'Dec 29', 'Василий Ганич, Сергей Кораблин, Алексей Сергеев, Алмаз Хамидуллин, Павел Ляхов, Александр Маклецов', 'Medium', 'In Progress', '6'], ['DEV-628', 'Dec 29', 'Ольга Мокина', 'Medium', 'To Do', '5'], ['PRD-203', 'Dec 29', 'Алексей Сергеев', 'Medium', 'To Do', '5'], ['PRD-241', 'Dec 29', 'Владислав Захаров, Алексей Сергеев', 'Low', 'To Do', '4'], ['PRD-109', 'Dec 29', 'Василий Ганич', 'Medium', 'Waiting', '4'], ['DEV-79', 'Dec 29', 'Хазрет Байкулов, Павел Ляхов', 'Minor', 'Deploy', '4'], ['DEV-599', 'Dec 29', 'Александр Маслов, Павел Ляхов', 'Critical', 'Testing', '5'], ['DEV-734', 'Dec 29', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-359', 'Dec 29', 'Хазрет Байкулов, Ольга Мокина, Александр Сенюк', 'Critical', 'In Progress', '4'], ['DEV-708', 'Dec 29', 'Александр Маслов, Сергей Биртанов', 'Critical', 'To Do', '6'], ['DEV-676', 'Dec 29', 'Павел Ляхов', 'Show-stopper', 'Waiting', '6'], ['PRD-321', 'Dec 29', 'Алексей Сергеев', 'Medium', 'To Do', '7'], ['DEV-494', 'Dec 29', 'Игорь Блинов, Павел Ляхов', 'Medium', 'Waiting', '4'], ['PRD-320', 'Dec 29', 'Ольга Мокина', 'Medium', 'To Do', '7'], ['DEV-662', 'Dec 29', 'Владислав Захаров', 'Medium', 'In Progress', '6'], ['DEV-509', 'Dec 29', 'Александр Маслов, Владислав Захаров', 'Medium', 'To Do', '4'], ['DEV-579', 'Dec 29', 'Владислав Захаров, Павел Ляхов', 'Medium', 'Testing', '5'], ['DEV-781', 'Dec 29', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-775', 'Dec 29', 'Владислав Захаров', 'Medium', 'To Do', '6'], ['DEV-789', 'Dec 29', 'Сергей Биртанов, Игорь Блинов', 'Medium', 'To Do', '6'], ['DEV-729', 'Dec 29', 'Хазрет Байкулов, Ольга Мокина, Баина Корнякова', 'Medium', 'To Do', '6'], ['PRD-319', 'Dec 29', 'Василий Ганич, Алексей Сергеев', 'Medium', 'To Do', '7'], ['DEV-716', 'Dec 29', 'Хазрет Байкулов, Ольга Мокина, Баина Корнякова', 'Medium', 'To Do', '6'], ['DEV-163', 'Dec 29', 'Александр Маслов, Сергей Биртанов', 'Medium', 'In Progress', '4'], ['DEV-719', 'Dec 29', 'Александр Маслов, Хазрет Байкулов, Ольга Мокина', 'Medium', 'In Progress', '6'], ['PRD-202', 'Dec 28', 'Александр Маслов, Владислав Захаров, Екатерина Силина', 'Minor', 'Testing', '7'], ['METH-189', 'Dec 28', 'Баина Корнякова', 'Medium', 'In Progress', '6'], ['DEV-402', 'Dec 28', 'Александр Маслов, Игорь Блинов', 'Show-stopper', 'Testing', '4'], ['DEV-394', 'Dec 28', 'Ольга Мокина, Игорь Блинов, Павел Ляхов', 'Critical', 'In Progress', '4'], ['DEV-786', 'Dec 28', 'Александр Сенюк', 'Medium', 'To Do', '6'], ['DEV-742', 'Dec 28', 'Александр Сенюк', 'Medium', 'Code Review', '7'], ['DEV-80', 'Dec 28', 'Ольга Мокина', 'Medium', 'In Progress', '4'], ['DEV-520', 'Dec 28', 'Сергей Кораблин', 'Medium', 'Testing', '5'], ['DEV-783', 'Dec 28', 'Хазрет Байкулов', 'Low', 'To Do', '6'], ['DEV-780', 'Dec 28', 'Хазрет Байкулов, Алексей Сергеев', 'Low', 'To Do', '7'], ['DEV-779', 'Dec 28', 'Хазрет Байкулов, Алексей Сергеев', 'Low', 'To Do', '7'], ['DEV-679', 'Dec 28', 'Владислав Захаров', 'Show-stopper', 'In Progress', '6'], ['DEV-678', 'Dec 28', 'Александр Маслов, Сергей Биртанов, Баина Корнякова', 'Show-stopper', 'Testing', '6'], ['PRD-249', 'Dec 28', 'Алмаз Хамидуллин', 'Medium', 'In Progress', '6'], ['DEV-538', 'Dec 28', 'Александр Маслов, Баина Корнякова', 'Low', 'To Do', '5'], ['DEV-724', 'Dec 28', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'In Progress', '6'], ['PRD-151', 'Dec 28', 'Александр Маслов, Владислав Захаров, Павел Ляхов', 'Medium', 'In Progress', '4'], ['DEV-575', 'Dec 28', 'Александр Маслов, Алексей Сергеев', 'Medium', 'In Progress', '4'], ['PRD-212', 'Dec 28', 'Алексей Сергеев', 'Critical', 'To Do', '6'], ['PRD-144', 'Dec 28', 'Павел Ляхов', 'Medium', 'Waiting', '4'], ['DEV-726', 'Dec 28', 'Александр Маслов', 'Medium', 'In Progress', '6'], ['DEV-728', 'Dec 28', 'Александр Маслов', 'Medium', 'In Progress', '6'], ['DEV-771', 'Dec 28', 'Сергей Биртанов', 'Critical', 'To Do', '6'], ['DEV-695', 'Dec 27', 'Владислав Захаров', 'Show-stopper', 'In Progress', '6'], ['SNDX-224', 'Dec 27', 'Василий Ганич, Светлана Обухова, Роман Зверев', 'Medium', 'In Progress', '7'], ['PRD-153', 'Dec 27', 'Алексей Сергеев', 'Medium', 'In Progress', '4'], ['DEV-309', 'Dec 27', 'Александр Маслов, Игорь Блинов', 'Critical', 'In Progress', '4'], ['DEV-433', 'Dec 27', 'Игорь Блинов, Александр Сенюк, Павел Ляхов', 'Critical', 'In Progress', '4'], ['DEV-765', 'Dec 27', 'Александр Сенюк', 'Low', 'To Do', '6'], ['DEV-736', 'Dec 27', 'Александр Маслов, Хазрет Байкулов', 'Critical', 'In Progress', '7'], ['DEV-586', 'Dec 27', 'Александр Маслов', 'Low', 'To Do', '5'], ['DEV-43', 'Dec 27', 'Хазрет Байкулов, Павел Ляхов', 'Low', 'In Progress', '4'], ['DEV-613', 'Dec 27', 'Хазрет Байкулов, Павел Ляхов', 'Show-stopper', 'Deploy', '5'], ['DEV-749', 'Dec 27', 'Хазрет Байкулов', 'Critical', 'Testing', '6'], ['DEV-412', 'Dec 26', 'Александр Маслов, Василий Ганич', 'Medium', 'To Do', '7'], ['DEV-267', 'Dec 26', 'Ольга Мокина, Василий Ганич, Екатерина Силина', 'Medium', 'Waiting', '4'], ['PRD-254', 'Dec 26', 'Василий Ганич, Екатерина Силина, Баина Корнякова', 'Medium', 'To Do', '7'], ['DEV-755', 'Dec 26', 'Александр Сенюк', 'Low', 'To Do', '7'], ['DEV-644', 'Dec 26', 'Ольга Мокина, Павел Ляхов', 'Medium', 'Deploy', '6'], ['DEV-752', 'Dec 26', 'Хазрет Байкулов, Ольга Мокина, Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-436', 'Dec 26', 'Ольга Мокина, Павел Ляхов', 'Medium', 'Deploy', '6'], ['DEV-640', 'Dec 26', 'Ольга Мокина, Павел Ляхов', 'Low', 'Deploy', '6'], ['DEV-180', 'Dec 26', 'Александр Маслов, Хазрет Байкулов, Павел Ляхов', 'Critical', 'In Progress', '4'], ['DEV-634', 'Dec 26', 'Александр Маслов', 'Critical', 'In Progress', '5'], ['DEV-641', 'Dec 26', 'Александр Маслов', 'Critical', 'To Do', '6'], ['DEV-639', 'Dec 26', 'Александр Маслов', 'Critical', 'To Do', '6'], ['DEV-745', 'Dec 26', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-739', 'Dec 26', 'Александр Сенюк', 'Low', 'To Do', '7'], ['DEV-744', 'Dec 26', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-743', 'Dec 26', 'Александр Сенюк, Алексей Сергеев', 'Minor', 'To Do', '7'], ['DEV-741', 'Dec 26', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-740', 'Dec 26', 'Александр Сенюк', 'Medium', 'To Do', '7'], ['DEV-636', 'Dec 26', 'Александр Маслов', 'Critical', 'To Do', '6'], ['DEV-635', 'Dec 26', 'Александр Маслов', 'Critical', 'To Do', '6'], ['DEV-258', 'Dec 26', 'Ольга Мокина, Александр Сенюк, Павел Ляхов', 'Medium', 'To Do', '4'], ['DEV-735', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Low', 'To Do', '6'], ['DEV-733', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-730', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-721', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-717', 'Dec 25', 'Хазрет Байкулов, Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-711', 'Dec 25', 'Александр Сенюк', 'Medium', 'To Do', '6'], ['DEV-710', 'Dec 25', 'Александр Сенюк', 'Medium', 'To Do', '6'], ['DEV-702', 'Dec 25', 'Александр Маслов, Хазрет Байкулов', 'Low', 'In Progress', '6'], ['DEV-554', 'Dec 25', 'Александр Маслов, Хазрет Байкулов, Баина Корнякова', 'Medium', 'In Progress', '5'], ['DEV-697', 'Dec 25', 'Хазрет Байкулов', 'Medium', 'In Progress', '6'], ['DEV-694', 'Dec 24', 'Сергей Биртанов', 'Show-stopper', 'To Do', '6'], ['DEV-696', 'Dec 24', 'Сергей Биртанов', 'Show-stopper', 'To Do', '6'], ['DEV-688', 'Dec 24', 'Хазрет Байкулов', 'Show-stopper', 'In Progress', '6'], ['DEV-632', 'Dec 24', 'Александр Маслов, Хазрет Байкулов', 'Medium', 'In Progress', '5'], ['DEV-598', 'Dec 24', 'Хазрет Байкулов', 'Medium', 'In Progress', '5'], ['DEV-480', 'Dec 24', 'Александр Маслов, Хазрет Байкулов', 'Medium', 'Testing', '4'], ['DEV-566', 'Dec 24', 'Игорь Блинов', 'Medium', 'Testing', '5'], ['DEV-655', 'Dec 24', 'Хазрет Байкулов', 'Critical', 'Testing', '5'], ['DEV-691', 'Dec 24', 'Александр Маслов, Сергей Биртанов', 'Critical', 'To Do', '6'], ['PRD-243', 'Dec 24', 'Хазрет Байкулов', 'Medium', 'Code Review', '6'], ['DEV-633', 'Dec 24', 'Хазрет Байкулов', 'Show-stopper', 'Testing', '5'], ['DEV-563', 'Dec 24', 'Сергей Биртанов', 'Medium', 'Waiting', '5'], ['DEV-686', 'Dec 21', 'Александр Маслов, Александр Маклецов', 'Critical', 'To Do', '6'], ['METH-133', 'Dec 21', 'Екатерина Силина, Баина Корнякова', 'Medium', 'In Progress', '5'], ['DEV-637', 'Dec 21', 'Сергей Биртанов', 'Show-stopper', 'Testing', '5'], ['DEV-527', 'Dec 20', 'Владислав Захаров', 'Medium', 'In Progress', '5'], ['DEV-279', 'Dec 20', 'Ольга Мокина, Игорь Блинов', 'Critical', 'In Progress', '4'], ['DEV-226', 'Dec 20', 'Хазрет Байкулов', 'Medium', 'Testing', '4'], ['DEV-280', 'Dec 19', 'Александр Маслов, Игорь Блинов', 'Critical', 'In Progress', '4'], ['DEV-377', 'Dec 19', 'Сергей Биртанов', 'Medium', 'Code Review', '4'], ['METH-191', 'Dec 18', 'Екатерина Силина, Баина Корнякова', 'Medium', 'To Do', '6'], ['METH-190', 'Dec 18', 'Екатерина Силина, Баина Корнякова', 'Medium', 'To Do', '6'], ['PRD-22', 'Dec 18', 'Александр Маслов, Игорь Блинов, Сергей Кораблин, Павел Ляхов', 'Low', 'To Do', '4'], ['DEV-668', 'Dec 18', 'Александр Сенюк', 'Low', 'To Do', '6'], ['DEV-384', 'Dec 18', 'Владислав Захаров', 'Low', 'To Do', '4'], ['DEV-649', 'Dec 18', 'Хазрет Байкулов', 'Show-stopper', 'Testing', '5'], ['DEV-657', 'Dec 18', 'Хазрет Байкулов', 'Medium', 'Testing', '5'], ['DEV-656', 'Dec 17', 'Сергей Биртанов', 'Critical', 'Testing', '6'], ['DEV-669', 'Dec 17', 'Ольга Мокина', 'Low', 'To Do', '6'], ['DEV-553', 'Dec 17', 'Александр Маслов', 'Show-stopper', 'To Do', '5'], ['DEV-415', 'Dec 17', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-486', 'Dec 17', 'Ольга Мокина', 'Critical', 'To Do', '4'], ['DEV-597', 'Dec 17', 'Александр Маслов', 'Show-stopper', 'To Do', '5'], ['DEV-557', 'Dec 17', 'Александр Маслов', 'Medium', 'In Progress', '5'], ['DEV-454', 'Dec 17', 'Хазрет Байкулов', 'Medium', 'In Progress', '4'], ['DEV-166', 'Dec 17', 'Александр Маслов, Хазрет Байкулов', 'Medium', 'In Progress', '4'], ['DEV-525', 'Dec 17', 'Александр Маслов', 'Critical', 'To Do', '5'], ['DEV-465', 'Dec 17', 'Александр Маслов, Хазрет Байкулов, Игорь Блинов, Баина Корнякова', 'Critical', 'Testing', '4'], ['DEV-19', 'Dec 17', 'Александр Маслов, Сергей Биртанов', 'Medium', 'Waiting', '4'], ['METH-42', 'Dec 17', 'Баина Корнякова', 'Medium', 'In Progress', '4'], ['PRD-248', 'Dec 17', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['PRD-247', 'Dec 17', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-647', 'Dec 17', 'Александр Маслов', 'Critical', 'In Progress', '5'], ['PRD-244', 'Dec 17', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-658', 'Dec 17', 'Сергей Биртанов', 'Medium', 'To Do', '5'], ['PRD-54', 'Dec 17', 'Василий Ганич', 'Low', 'To Do', '4'], ['PRD-240', 'Dec 14', 'Павел Ляхов', 'Medium', 'Testing', '5'], ['DEV-348', 'Dec 14', 'Александр Маслов, Павел Ляхов', 'Critical', 'To Do', '3'], ['SNDX-198', 'Dec 14', 'Баина Корнякова', 'Medium', 'In Progress', '5'], ['DEV-347', 'Dec 13', 'Владислав Захаров, Павел Ляхов', 'Medium', 'In Progress', '4'], ['DEV-645', 'Dec 13', 'Владислав Захаров', 'Low', 'To Do', '6'], ['SNDX-197', 'Dec 13', 'Баина Корнякова', 'Medium', 'In Progress', '5'], ['DEV-643', 'Dec 13', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-638', 'Dec 13', 'Александр Маслов, Ольга Мокина', 'Critical', 'To Do', '6'], ['DEV-484', 'Dec 13', 'Хазрет Байкулов', 'Medium', 'In Progress', '4'], ['DEV-184', 'Dec 13', 'Сергей Биртанов', 'Medium', 'Testing', '4'], ['DEV-610', 'Dec 12', 'Ольга Мокина', 'Medium', 'To Do', '5'], ['DEV-213', 'Dec 12', 'Ольга Мокина', 'Medium', 'To Do', '4'], ['DEV-550', 'Dec 12', 'Хазрет Байкулов', 'Medium', 'Testing', '5'], ['DEV-582', 'Dec 12', 'Хазрет Байкулов, Игорь Блинов', 'Show-stopper', 'Testing', '5'], ['DEV-328', 'Dec 10', 'Игорь Блинов, Баина Корнякова', 'Medium', 'Testing', '4'], ['DEV-502', 'Dec 10', 'Игорь Блинов', 'Critical', 'Testing', '4'], ['DEV-477', 'Dec 10', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-585', 'Dec 10', 'Сергей Биртанов', 'Medium', 'To Do', '5'], ['DEV-498', 'Dec 10', 'Сергей Биртанов', 'Medium', 'Testing', '4'], ['DEV-583', 'Dec 10', 'Ольга Мокина', 'Medium', 'To Do', '5'], ['DEV-580', 'Dec 10', 'Ольга Мокина', 'Low', 'To Do', '6'], ['DEV-396', 'Dec 07', 'Владислав Захаров, Игорь Блинов', 'Medium', 'Testing', '4'], ['DEV-561', 'Dec 07', 'Игорь Блинов', 'Medium', 'Testing', '5'], ['DEV-567', 'Dec 07', 'Хазрет Байкулов, Игорь Блинов', 'Critical', 'Testing', '5'], ['PRD-204', 'Dec 06', 'Ольга Мокина', 'Medium', 'To Do', '6'], ['DEV-227', 'Dec 06', 'Хазрет Байкулов', 'Medium', 'Testing', '4'], ['DEV-499', 'Dec 06', 'Хазрет Байкулов', 'Medium', 'Testing', '4'], ['DEV-552', 'Dec 06', 'Хазрет Байкулов', 'Show-stopper', 'Testing', '5'], ['DEV-556', 'Dec 06', 'Хазрет Байкулов', 'Show-stopper', 'Testing', '5'], ['DEV-548', 'Dec 06', 'Игорь Блинов', 'Critical', 'Testing', '5'], ['DEV-546', 'Dec 04', 'Александр Маслов', 'Medium', 'In Progress', '5'], ['DEV-207', 'Dec 04', 'Ольга Мокина', 'Medium', 'To Do', '4'], ['DEV-91', 'Dec 04', 'Ольга Мокина', 'Medium', 'To Do', '4'], ['DEV-512', 'Dec 04', 'Ольга Мокина', 'Low', 'To Do', '4'], ['DEV-545', 'Dec 04', 'Ольга Мокина', 'Medium', 'To Do', '5'], ['DEV-231', 'Dec 04', 'Владислав Захаров, Павел Ляхов', 'Medium', 'Waiting', '4'], ['DEV-142', 'Dec 04', 'Александр Маслов', 'Medium', 'Waiting', '4'], ['DEV-483', 'Dec 04', 'Александр Маслов', 'Medium', 'To Do', '4'], ['SNDX-156', 'Dec 04', 'Александр Маслов', 'Critical', 'To Do', '5'], ['DEV-74', 'Dec 04', 'Александр Маслов', 'Medium', 'In Progress', '4'], ['DEV-254', 'Dec 04', 'Павел Поляков', 'Medium', 'Waiting', '4'], ['PRD-85', 'Dec 03', 'Алексей Сергеев', 'Medium', 'In Progress', '4'], ['DEV-251', 'Dec 03', 'Хазрет Байкулов', 'Low', 'To Do', '4'], ['DEV-513', 'Dec 03', 'Александр Маслов, Ольга Мокина', 'Medium', 'To Do', '4'], ['DEV-516', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['PRD-60', 'Dec 03', 'Александр Маслов, Василий Ганич, Алексей Сергеев', 'Low', 'To Do', '4'], ['DEV-104', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['PRD-18', 'Dec 03', 'Ольга Мокина, Павел Ляхов', 'Medium', 'Waiting', '4'], ['DEV-248', 'Dec 03', 'Александр Маслов, Баина Корнякова', 'Critical', 'Testing', '4'], ['DEV-376', 'Dec 03', 'Хазрет Байкулов, Александр Сенюк, Павел Ляхов', 'Medium', 'To Do', '4'], ['DEV-154', 'Dec 03', 'Александр Маслов', 'Medium', 'Waiting', '4'], ['DEV-148', 'Dec 03', 'Александр Маслов', 'Minor', 'To Do', '4'], ['DEV-293', 'Dec 03', 'Ольга Мокина, Игорь Блинов', 'Critical', 'To Do', '4'], ['DEV-130', 'Dec 03', 'Хазрет Байкулов', 'Low', 'To Do', '4'], ['DEV-472', 'Dec 03', 'Александр Сенюк', 'Medium', 'To Do', '4'], ['DEV-294', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-455', 'Dec 03', 'Игорь Блинов', 'Show-stopper', 'Testing', '4'], ['DEV-367', 'Dec 03', 'Александр Сенюк', 'Medium', 'In Progress', '4'], ['DEV-221', 'Dec 03', 'Ольга Мокина, Баина Корнякова', 'Medium', 'Waiting', '4'], ['DEV-18', 'Dec 03', 'Александр Маслов, Павел Ляхов', 'Critical', 'In Progress', '4'], ['DEV-3', 'Dec 03', 'Игорь Блинов, Баина Корнякова', 'Medium', 'Testing', '4'], ['DEV-429', 'Dec 03', 'Александр Маслов, Баина Корнякова', 'Critical', 'Testing', '4'], ['DEV-378', 'Dec 03', 'Владислав Захаров', 'Low', 'To Do', '4'], ['PRD-57', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['IT-14', 'Dec 03', 'Александр Маслов', 'Critical', 'In Progress', '4'], ['DEV-153', 'Dec 03', 'Александр Маслов', 'Critical', 'To Do', '4'], ['DEV-151', 'Dec 03', 'Александр Маслов', 'Minor', 'To Do', '4'], ['DEV-20', 'Dec 03', 'Хазрет Байкулов', 'Minor', 'To Do', '4'], ['DEV-174', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-169', 'Dec 03', 'Александр Маслов', 'Low', 'To Do', '4'], ['DEV-10', 'Dec 03', 'Хазрет Байкулов, Игорь Блинов', 'Low', 'To Do', '4'], ['DEV-189', 'Dec 03', 'Александр Маслов', 'Critical', 'In Progress', '4'], ['DEV-176', 'Dec 03', 'Александр Маслов', 'Medium', 'To Do', '4'], ['DEV-238', 'Dec 03', 'Хазрет Байкулов, Павел Ляхов', 'Medium', 'To Do', '4'], ['DEV-381', 'Dec 03', 'Ольга Мокина', 'Low', 'To Do', '4'], ['DEV-389', 'Dec 03', 'Александр Маслов', 'Medium', 'Testing', '4'], ['PRD-58', 'Nov 04', 'Александр Маслов', 'Medium', 'To Do', '3'], ['SNDX-47', 'Nov 01', 'Александр Маслов', 'Low', 'To Do', '3']];\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}